{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6c022e75d965fe3b9e7b","webpack:///./src/app.ts","webpack:///./src/controller/ui.ts","webpack:///./src/controller/usage.ts","webpack:///webpack:///webpack/universalModuleDefinition","webpack:///webpack:/webpack/bootstrap cc12c561526565ac4570","webpack:///webpack:///src/iq.ts","webpack:///webpack:///src/constants/index.ts","webpack:///webpack:///src/constants/bt709.ts","webpack:///webpack:///src/conversion/index.ts","webpack:///webpack:///src/conversion/rgb2xyz.ts","webpack:///webpack:///src/conversion/rgb2hsl.ts","webpack:///webpack:///src/utils/arithmetic.ts","webpack:///webpack:///src/conversion/rgb2lab.ts","webpack:///webpack:///src/conversion/xyz2lab.ts","webpack:///webpack:///src/conversion/lab2xyz.ts","webpack:///webpack:///src/conversion/lab2rgb.ts","webpack:///webpack:///src/conversion/xyz2rgb.ts","webpack:///webpack:///src/distance/index.ts","webpack:///webpack:///src/distance/abstractDistanceCalculator.ts","webpack:///webpack:///src/distance/cie94.ts","webpack:///webpack:///src/distance/ciede2000.ts","webpack:///webpack:///src/distance/cmetric.ts","webpack:///webpack:///src/distance/euclidean.ts","webpack:///webpack:///src/distance/manhattan.ts","webpack:///webpack:///src/distance/pngQuant.ts","webpack:///webpack:///src/palette/index.ts","webpack:///webpack:///src/palette/neuquant/neuquant.ts","webpack:///webpack:///src/utils/palette.ts","webpack:///webpack:///src/utils/pointContainer.ts","webpack:///webpack:///src/utils/point.ts","webpack:///webpack:///src/palette/neuquant/neuquantFloat.ts","webpack:///webpack:///src/palette/rgbquant/rgbquant.ts","webpack:///webpack:///src/palette/rgbquant/colorHistogram.ts","webpack:///webpack:///src/utils/hueStatistics.ts","webpack:///webpack:///src/palette/wu/wuQuant.ts","webpack:///webpack:///src/image/index.ts","webpack:///webpack:///src/image/nearestColor.ts","webpack:///webpack:///src/image/array.ts","webpack:///webpack:///src/image/riemersma.ts","webpack:///webpack:///src/image/spaceFillingCurves/hilbertCurve.ts","webpack:///webpack:///src/quality/index.ts","webpack:///webpack:///src/quality/ssim.ts","webpack:///webpack:///src/utils/index.ts","webpack:///./src/ui/leftPanel/leftPanel.ts","webpack:///./src/ui/leftPanel/configForm.ts","webpack:///./src/ui/leftPanel/imageFileExplorer.ts","webpack:///./src/data/imageList.ts","webpack:///./src/ui/rightPanel/rightPanel.ts","webpack:///./src/ui/rightPanel/clickToCompare.ts","webpack:///./src/ui/rightPanel/originalVsQuantized.ts"],"names":[],"mappings":"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","file":"D:\\projects\\my\\typescript\\image-quantization-demo/dist/app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"app\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"app\"] = factory();\n\telse\n\t\troot[\"app\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6c022e75d965fe3b9e7b","///<reference path=\"../lib/webix/webix.d.ts\"/>\nimport {initialize} from \"./controller/ui\";\nimport {leftPanel} from \"./ui/leftPanel/leftPanel\";\nimport {rightPanel} from \"./ui/rightPanel/rightPanel\";\n\nwebix.ready(function () {\n\n\twebix.ui({\n\t\ttype : \"line\",\n\t\tcols : [\n\t\t\t{\n\t\t\t\twidth  : 500,\n\t\t\t\theader : \"Settings & Folders\", headerHeight : 45,\n\t\t\t\tbody   : leftPanel\n\t\t\t},\n\t\t\t{ view : \"resizer\" },\n\t\t\trightPanel\n\t\t]\n\t});\n\n\tinitialize();\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.ts","import {QuantizationUsage} from \"./usage\";\n\nvar quantizeResult = null;\n\nexport function initialize() {\n\tdocument.body.ondrop = event=> {\n\t\tevent.preventDefault();\n\n\t\tvar files = event.dataTransfer.files;\n\t\tfor (var i = 0; i < files.length; i++) {\n\t\t\tprocessDrag(files[ i ]);\n\t\t}\n\t\t//readfiles(event.dataTransfer.files);\n\t\tconsole.log(event);\n\t};\n\n\tdocument.body.ondragover = event=> {\n\t\tevent.preventDefault();\n\t};\n}\n\nexport function update(quantize : boolean) {\n\tif (quantize) {\n\t\tvar imageFoldersControl = (<webix.ui.grouplist>$$(\"image\"));\n\t\tvar selectedId          = imageFoldersControl.getSelectedId(true);\n\t\tif (selectedId.length > 0) {\n\t\t\tvar node = imageFoldersControl.getItemNode(selectedId[ 0 ]);\n\t\t\tif (node) {\n\t\t\t\tvar img : HTMLImageElement = (<any>node).firstElementChild;\n\n\t\t\t\tif (img.tagName === \"IMG\") {\n\t\t\t\t\tvar colors                 = parseInt((<webix.ui.richselect>$$(\"option-colors\")).getValue(), 10),\n\t\t\t\t\t\tpaletteQuantizerMethod = parseInt((<webix.ui.richselect>$$(\"option-palette\")).getValue(), 10),\n\t\t\t\t\t\timageQuantizerMethod   = parseInt((<webix.ui.richselect>$$(\"option-image\")).getValue(), 10) - 2,\n\t\t\t\t\t\tcolorDistanceMethod    = parseInt((<webix.ui.richselect>$$(\"option-distance\")).getValue(), 10);\n\n\t\t\t\t\tquantizeResult = (new QuantizationUsage()).quantize(img, colors, paletteQuantizerMethod, imageQuantizerMethod, colorDistanceMethod);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (quantizeResult) {\n\t\tfillClickToCompare(quantizeResult);\n\t\tfillOriginalVsQuantized(quantizeResult);\n\t}\n}\n\nfunction fillOriginalVsQuantized(result) {\n\tvar prefix = \"id-imageView2-\";\n\t// CLEANUP\n\t//container.innerHTML = \"\";\n\t$$(\"imageView2-statistics\").getNode().firstElementChild.innerHTML = \" (SSIM: \" + result.ssim.toFixed(2) + \", Time: \" + result.time + \" )\";\n\n\t// DRAW ORIGINAL IMAGE\n\tvar canvas          = QuantizationUsage.drawPixels(result.original, result.original.getWidth());\n\tcanvas.id           = prefix + \"original-image\";\n\tcanvas.className    = \"image-semi-transparent-background\";\n\t//canvas.style.display = \"none\";\n\tvar container       = $$(\"imageView2-image-original\").getNode().firstElementChild;\n\tcontainer.innerHTML = \"\";\n\tcontainer.appendChild(canvas);\n\n\t// DRAW REDUCED/DITHERED IMAGE\n\tcanvas              = QuantizationUsage.drawPixels(result.image, result.image.getWidth());\n\tcanvas.id           = prefix + \"reduced-image\";\n\tcanvas.className    = \"image-semi-transparent-background\";\n\tcontainer           = $$(\"imageView2-image-quantized\").getNode().firstElementChild;\n\tcontainer.innerHTML = \"\";\n\tcontainer.appendChild(canvas);\n\n\t// DRAW PALETTE\n\tcanvas              = QuantizationUsage.drawPixels(result.palette.getPointContainer(), 16, 128);\n\tcontainer           = $$(\"imageView2-palette\").getNode().firstElementChild;\n\tcontainer.innerHTML = \"\";\n\tcontainer.appendChild(canvas);\n}\n\nfunction fillClickToCompare(result) {\n\tvar prefix                                                        = \"id-imageView2-\";\n\t// CLEANUP\n\t$$(\"imageView1-statistics\").getNode().firstElementChild.innerHTML = \" (SSIM: \" + result.ssim.toFixed(2) + \", Time: \" + result.time + \" )\";\n\n\t// DRAW ORIGINAL IMAGE\n\tvar canvasOriginal           = QuantizationUsage.drawPixels(result.original, result.original.getWidth());\n\tcanvasOriginal.id            = prefix + \"original-image\";\n\tcanvasOriginal.className     = \"image-semi-transparent-background\";\n\tcanvasOriginal.style.display = \"none\";\n\tvar container                = $$(\"imageView1-image\").getNode().firstElementChild;\n\tcontainer.innerHTML          = \"\";\n\tcontainer.appendChild(canvasOriginal);\n\n\t// DRAW REDUCED/DITHERED IMAGE\n\tvar canvasReduced       = QuantizationUsage.drawPixels(result.image, result.image.getWidth());\n\tcanvasReduced.id        = prefix + \"reduced-image\";\n\tcanvasReduced.className = \"image-semi-transparent-background\";\n\tcontainer               = $$(\"imageView1-image\").getNode().firstElementChild;\n\tcontainer.appendChild(canvasReduced);\n\n\t// Add Container handlers\n\tcontainer.onmousedown = () => {\n\t\tcanvasOriginal.style.display = \"\";\n\t\tcanvasReduced.style.display  = \"none\";\n\t};\n\tcontainer.onmouseup   = () => {\n\t\tcanvasOriginal.style.display = \"none\";\n\t\tcanvasReduced.style.display  = \"\";\n\t};\n\n\t// DRAW PALETTE\n\tvar canvasPalette   = QuantizationUsage.drawPixels(result.palette.getPointContainer(), 16, 128);\n\tcontainer           = $$(\"imageView1-palette\").getNode().firstElementChild;\n\tcontainer.innerHTML = \"\";\n\tcontainer.appendChild(canvasPalette);\n}\n\nfunction processDrag(file) {\n\tvar reader    = new FileReader();\n\treader.onload = function (event) {\n\t\t(<webix.ui.grouplist>$$(\"image\")).add({\n\t\t\tid      : 'image-' + file.name,\n\t\t\tdataUrl : (<any>event.target).result\n\t\t});\n\t};\n\n\treader.readAsDataURL(file);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/controller/ui.ts","import * as iq from \"image-q\";\n\nexport class QuantizationUsage {\n\tstatic drawPixels(pointContainer, width0, width1? : number) {\n\t\tvar idxi8  = pointContainer.toUint8Array(),\n\t\t\tidxi32 = new Uint32Array(idxi8.buffer);\n\n\t\twidth1 = width1 || width0;\n\n\t\tvar can        = document.createElement(\"canvas\"),\n\t\t\tcan2       = document.createElement(\"canvas\"),\n\t\t\tctx : any  = can.getContext(\"2d\"),\n\t\t\tctx2 : any = can2.getContext(\"2d\");\n\n\t\tcan.width   = width0;\n\t\tcan.height  = Math.ceil(idxi32.length / width0);\n\t\tcan2.width  = width1;\n\t\tcan2.height = Math.ceil(can.height * width1 / width0);\n\n\t\tctx.imageSmoothingEnabled = ctx.mozImageSmoothingEnabled = ctx.webkitImageSmoothingEnabled = ctx.msImageSmoothingEnabled = false;\n\t\tctx2.imageSmoothingEnabled = ctx2.mozImageSmoothingEnabled = ctx2.webkitImageSmoothingEnabled = ctx2.msImageSmoothingEnabled = false;\n\n\t\tvar imgd = ctx.createImageData(can.width, can.height);\n\n\t\tif (QuantizationUsage._typeOf(imgd.data) == \"CanvasPixelArray\") {\n\t\t\tvar data = imgd.data;\n\t\t\tfor (var i = 0, len = data.length; i < len; ++i) {\n\t\t\t\tdata[ i ] = idxi8[ i ];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tvar buf32 = new Uint32Array(imgd.data.buffer);\n\t\t\tbuf32.set(idxi32);\n\t\t}\n\n\t\tctx.putImageData(imgd, 0, 0);\n\n\t\tctx2.drawImage(can, 0, 0, can2.width, can2.height);\n\n\t\treturn can2;\n\t}\n\n\tprivate static _typeOf(val) {\n\t\treturn Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\n\tprivate _timeMark(title, callback) {\n\t\tvar start = Date.now();\n\t\tcallback();\n\t\tconsole.log(title + \": \" + (Date.now() - start));\n\t}\n\n\tprivate _baseName(src) {\n\t\treturn src.split(\"/\").pop().split(\".\");\n\t}\n\n\tpublic quantize(img : HTMLImageElement, optionColors, optionPaletteQuantizer, optionImageDithering, optionColorDistance) : {palette : iq.utils.Palette, image : iq.utils.PointContainer, time : number, ssim : number, original : iq.utils.PointContainer} {\n\t\tvar pointBuffer : iq.utils.PointContainer,\n\t\t\toriginalPointBuffer : iq.utils.PointContainer,\n\t\t\tpaletteQuantizer : iq.palette.IPaletteQuantizer,\n\t\t\tid = this._baseName(img.src)[ 0 ],\n\t\t\tpalette : iq.utils.Palette,\n\t\t\timage : iq.utils.PointContainer;\n\n\t\tpointBuffer         = iq.utils.PointContainer.fromHTMLImageElement(img);\n\t\toriginalPointBuffer = pointBuffer.clone();\n\n\t\tvar time = Date.now();\n\n\t\tconsole.log(\"image = \" + id);\n\t\tthis._timeMark(\"...sample\", () => {\n\t\t\tvar distance : iq.distance.AbstractDistanceCalculator = this._getColorDistanceCalculator(optionColorDistance);\n\n\t\t\tswitch (optionPaletteQuantizer) {\n\t\t\t\tcase 1:\n\t\t\t\t\tpaletteQuantizer = new iq.palette.NeuQuant(distance, optionColors);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tpaletteQuantizer = new iq.palette.RGBQuant(distance, optionColors);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tpaletteQuantizer = new iq.palette.WuQuant(distance, optionColors);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tpaletteQuantizer = new iq.palette.NeuQuantFloat(distance, optionColors);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpaletteQuantizer.sample(pointBuffer);\n\t\t});\n\n\t\tthis._timeMark(\"...palette\", function () {\n\t\t\tpalette = paletteQuantizer.quantize();\n\t\t});\n\n\t\tthis._timeMark(\"...dither\", () => {\n\t\t\tvar distance : iq.distance.AbstractDistanceCalculator = this._getColorDistanceCalculator(optionColorDistance);\n\n\t\t\tvar imageQuantizer;\n\t\t\tif (optionImageDithering === -1) {\n\t\t\t\timageQuantizer = new iq.image.NearestColor(distance);\n\t\t\t} else if (optionImageDithering === 9) {\n\t\t\t\timageQuantizer = new iq.image.ErrorDiffusionRiemersma(distance);\n\t\t\t} else {\n\t\t\t\timageQuantizer = new iq.image.ErrorDiffusionArray(distance, optionImageDithering, true, 0, false);\n\t\t\t}\n\n\t\t\timage = imageQuantizer.quantize(pointBuffer, palette);\n\t\t});\n\n\t\ttime     = Date.now() - time;\n\t\tvar ssim = new iq.quality.SSIM().compare(originalPointBuffer, pointBuffer);\n\n\t\tthis._checkImageAndPalette(image, palette, optionColors);\n\n\t\treturn {\n\t\t\toriginal : originalPointBuffer,\n\t\t\timage    : image,\n\t\t\tpalette  : palette,\n\t\t\ttime     : time,\n\t\t\tssim     : ssim\n\t\t};\n\t}\n\n\tprivate _getColorDistanceCalculator(option) : iq.distance.AbstractDistanceCalculator {\n\t\tswitch (option) {\n\t\t\tcase 1:\n\t\t\t\treturn new iq.distance.Euclidean();\n\t\t\tcase 2:\n\t\t\t\treturn new iq.distance.Manhattan();\n\t\t\tcase 3:\n\t\t\t\treturn new iq.distance.CIEDE2000();\n\t\t\tcase 4:\n\t\t\t\treturn new iq.distance.CIE94Textiles();\n\t\t\tcase 5:\n\t\t\t\treturn new iq.distance.CIE94GraphicArts();\n\t\t\tcase 6:\n\t\t\t\treturn new iq.distance.EuclideanRgbQuantWOAlpha();\n\t\t\tcase 7:\n\t\t\t\treturn new iq.distance.EuclideanRgbQuantWithAlpha();\n\t\t\tcase 8:\n\t\t\t\treturn new iq.distance.ManhattanSRGB();\n\t\t\tcase 9:\n\t\t\t\treturn new iq.distance.CMETRIC();\n\t\t\tcase 10:\n\t\t\t\treturn new iq.distance.PNGQUANT();\n\t\t\tcase 11:\n\t\t\t\treturn new iq.distance.ManhattanNommyde();\n\t\t}\n\t}\n\n\tprivate _checkImageAndPalette(image : iq.utils.PointContainer, palette : iq.utils.Palette, colors : number) : void {\n\t\t// check palette\n\t\tif (palette.getPointContainer().getPointArray().length > colors) {\n\t\t\tthrow new Error(\"Palette contains more colors than allowed\");\n\t\t}\n\n\t\t// check image\n\t\timage.getPointArray().forEach((point : iq.utils.Point) => {\n\t\t\tif (!palette.has(point)) {\n\t\t\t\tthrow new Error(\"Image contains color not in palette: \" + point.r + \",\" + point.g + \",\" + point.b + \",\" + point.a);\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/controller/usage.ts","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"iq\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"iq\"] = factory();\n\telse\n\t\troot[\"iq\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cc12c561526565ac4570\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:/webpack/bootstrap cc12c561526565ac4570","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport * as constants from \"./constants\"\r\nimport * as conversion from \"./conversion\"\r\nimport * as distance from \"./distance\"\r\nimport * as palette from \"./palette\"\r\nimport * as image from \"./image\"\r\nimport * as quality from \"./quality\"\r\nimport * as utils from \"./utils\"\r\n\r\nexport {\r\n    constants,\r\n    conversion,\r\n    distance,\r\n    palette,\r\n    image,\r\n    quality,\r\n    utils\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/iq.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/iq.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * constants.ts - part of Image Quantization Library\r\n */\r\nimport * as bt709 from \"./bt709\"\r\n\r\nexport {\r\n    bt709\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/index.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/constants/index.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * constants.ts - part of Image Quantization Library\r\n */\r\n\r\n/**\r\n * sRGB (based on ITU-R Recommendation BT.709)\r\n * http://en.wikipedia.org/wiki/SRGB\r\n */\r\nenum Y {\r\n    RED = .2126, GREEN = .7152, BLUE = .0722, WHITE = 1\r\n}\r\n\r\nenum x {\r\n    RED = .6400, GREEN = .3000, BLUE = .1500, WHITE = .3127\r\n}\r\n\r\nenum y {\r\n    RED = .3300, GREEN = .6000, BLUE = .0600, WHITE = .3290\r\n}\r\n\r\nexport {\r\n    Y,\r\n    x,\r\n    y\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants/bt709.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/constants/bt709.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport { rgb2xyz } from \"./rgb2xyz\"\r\nimport { rgb2hsl } from \"./rgb2hsl\"\r\nimport { rgb2lab } from \"./rgb2lab\"\r\nimport { lab2xyz } from \"./lab2xyz\"\r\nimport { lab2rgb } from \"./lab2rgb\"\r\nimport { xyz2lab } from \"./xyz2lab\"\r\nimport { xyz2rgb } from \"./xyz2rgb\"\r\n\r\nexport {\r\n    rgb2xyz,\r\n    rgb2hsl,\r\n    rgb2lab,\r\n    lab2xyz,\r\n    lab2rgb,\r\n    xyz2lab,\r\n    xyz2rgb,\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/index.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/conversion/index.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * rgb2xyz.ts - part of Image Quantization Library\r\n */\r\nfunction correctGamma(n : number) {\r\n    return n > 0.04045 ? Math.pow((n + 0.055) / 1.055, 2.4) : n / 12.92;\r\n}\r\n\r\nexport function rgb2xyz(r : number, g : number, b : number) : { x : number; y : number; z : number } {\r\n    // gamma correction, see https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\r\n    r = correctGamma(r / 255);\r\n    g = correctGamma(g / 255);\r\n    b = correctGamma(b / 255);\r\n\r\n    // Observer. = 2°, Illuminant = D65\r\n    return {\r\n        x : r * 0.4124 + g * 0.3576 + b * 0.1805,\r\n        y : r * 0.2126 + g * 0.7152 + b * 0.0722,\r\n        z : r * 0.0193 + g * 0.1192 + b * 0.9505\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/rgb2xyz.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/conversion/rgb2xyz.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * rgb2hsl.ts - part of Image Quantization Library\r\n */\r\nimport { min3, max3 } from \"../utils/arithmetic\"\r\n\r\n/**\r\n * Calculate HSL from RGB\r\n * Hue is in degrees [0..360]\r\n * Lightness: [0..1]\r\n * Saturation: [0..1]\r\n * http://web.archive.org/web/20060914040436/http://local.wasp.uwa.edu.au/~pbourke/colour/hsl/\r\n */\r\nexport function rgb2hsl(r : number, g : number, b : number) : {h : number; s : number; l : number} {\r\n    const min   = min3(r, g, b),\r\n          max   = max3(r, g, b),\r\n          delta = max - min,\r\n          l     = (min + max) / 510;\r\n\r\n    let s = 0;\r\n    if (l > 0 && l < 1) s = delta / (l < 0.5 ? (max + min) : (510 - max - min));\r\n\r\n    let h = 0;\r\n    if (delta > 0) {\r\n        if (max === r) {\r\n            h = (g - b) / delta;\r\n        } else if (max === g) {\r\n            h = (2 + (b - r) / delta);\r\n        } else {\r\n            h = (4 + (r - g) / delta);\r\n        }\r\n\r\n        h *= 60;\r\n        if (h < 0) h += 360;\r\n    }\r\n    return { h, s, l };\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/rgb2hsl.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/conversion/rgb2hsl.ts","export function degrees2radians(n : number) : number {\r\n    return n * (Math.PI / 180);\r\n}\r\n\r\nexport function max3(a : number, b : number, c : number) {\r\n    let m = a;\r\n    (m < b) && (m = b);\r\n    (m < c) && (m = c);\r\n    return m;\r\n}\r\n\r\nexport function min3(a : number, b : number, c : number) {\r\n    let m = a;\r\n    (m > b) && (m = b);\r\n    (m > c) && (m = c);\r\n    return m;\r\n}\r\n\r\nexport function intInRange(value : number, low : number, high : number) {\r\n    if (value > high) value = high;\r\n    if (value < low) value = low;\r\n    return value | 0;\r\n}\r\n\r\nexport function inRange0to255Rounded(n : number) {\r\n    n = Math.round(n);\r\n    if (n > 255) n = 255;\r\n    else if (n < 0) n = 0;\r\n    return n;\r\n}\r\n\r\nexport function inRange0to255(n : number) {\r\n    if (n > 255) n = 255;\r\n    else if (n < 0) n = 0;\r\n    return n;\r\n}\r\n\r\nexport function stableSort<T>(arrayToSort : T[], callback : (a : T, b : T) => number) : T[] {\r\n    const type = typeof arrayToSort[ 0 ];\r\n    let sorted : T[];\r\n\r\n    if (type === \"number\" || type === \"string\") {\r\n        const ord = Object.create(null);\r\n        for (let i = 0, l = arrayToSort.length; i < l; i++) {\r\n            const val : string = <any>arrayToSort[ i ];\r\n            if (ord[ val ] || ord[ val ] === 0) continue;\r\n            ord[ val ] = i;\r\n        }\r\n\r\n        sorted = arrayToSort.sort(function (a, b) {\r\n            return callback(a, b) || ord[ <any>a ] - ord[ <any>b ];\r\n        });\r\n    } else {\r\n        const ord2 : T[] = arrayToSort.slice(0);\r\n        sorted           = arrayToSort.sort(function (a, b) {\r\n            return callback(a, b) || ord2.indexOf(a) - ord2.indexOf(b);\r\n        });\r\n    }\r\n\r\n    return sorted;\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/arithmetic.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/utils/arithmetic.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * rgb2lab.ts - part of Image Quantization Library\r\n */\r\nimport { rgb2xyz } from \"./rgb2xyz\"\r\nimport { xyz2lab } from \"./xyz2lab\"\r\n\r\nexport function rgb2lab(r : number, g : number, b : number) : { L : number; a : number; b : number } {\r\n    const xyz = rgb2xyz(r, g, b);\r\n    return xyz2lab(xyz.x, xyz.y, xyz.z);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/rgb2lab.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/conversion/rgb2lab.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * xyz2lab.ts - part of Image Quantization Library\r\n */\r\nconst refX : number = 0.95047, //ref_X =  95.047   Observer= 2°, Illuminant= D65\r\n      refY : number = 1.00000, //ref_Y = 100.000\r\n      refZ : number = 1.08883; //ref_Z = 108.883\r\n\r\nfunction pivot(n : number) : number {\r\n    return n > 0.008856 ? Math.pow(n, 1 / 3) : ( 7.787 * n + 16 / 116);\r\n}\r\n\r\nexport function xyz2lab(x : number, y : number, z : number) : {L : number; a : number; b : number} {\r\n    x = pivot(x / refX);\r\n    y = pivot(y / refY);\r\n    z = pivot(z / refZ);\r\n\r\n    if (( 116 * y ) - 16 < 0) throw new Error(\"xxx\")\r\n    return {\r\n        L : Math.max(0, ( 116 * y ) - 16),\r\n        a : 500 * ( x - y ),\r\n        b : 200 * ( y - z )\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/xyz2lab.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/conversion/xyz2lab.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * lab2xyz.ts - part of Image Quantization Library\r\n */\r\nconst refX : number = 0.95047, //ref_X =  95.047   Observer= 2°, Illuminant = D65\r\n      refY : number = 1.00000, //ref_Y = 100.000\r\n      refZ : number = 1.08883; //ref_Z = 108.883\r\n\r\nfunction pivot(n : number) {\r\n    return n > 0.206893034 ? Math.pow(n, 3) : ( n - 16 / 116 ) / 7.787\r\n}\r\n\r\nexport function lab2xyz(L : number, a : number, b : number) : {x : number; y : number; z : number} {\r\n    const y = ( L + 16 ) / 116,\r\n          x = a / 500 + y,\r\n          z = y - b / 200;\r\n\r\n    return {\r\n        x : refX * pivot(x),\r\n        y : refY * pivot(y),\r\n        z : refZ * pivot(z)\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/lab2xyz.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/conversion/lab2xyz.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * lab2rgb.ts - part of Image Quantization Library\r\n */\r\nimport { lab2xyz } from \"./lab2xyz\"\r\nimport { xyz2rgb } from \"./xyz2rgb\"\r\n\r\nexport function lab2rgb(L : number, a : number, b : number) : { r : number; g : number; b : number } {\r\n    const xyz = lab2xyz(L, a, b);\r\n    return xyz2rgb(xyz.x, xyz.y, xyz.z);\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/lab2rgb.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/conversion/lab2rgb.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * xyz2rgb.ts - part of Image Quantization Library\r\n */\r\nimport { inRange0to255Rounded } from \"../utils/arithmetic\"\r\n\r\n// gamma correction, see https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\r\nfunction correctGamma(n : number) {\r\n    return n > 0.0031308 ? 1.055 * Math.pow(n, 1 / 2.4) - 0.055 : 12.92 * n;\r\n}\r\n\r\nexport function xyz2rgb(x : number, y : number, z : number) : { r : number; g : number; b : number } {\r\n    // Observer. = 2°, Illuminant = D65\r\n    const r = correctGamma(x * 3.2406 + y * -1.5372 + z * -0.4986),\r\n          g = correctGamma(x * -0.9689 + y * 1.8758 + z * 0.0415),\r\n          b = correctGamma(x * 0.0557 + y * -0.2040 + z * 1.0570);\r\n\r\n    return {\r\n        r : inRange0to255Rounded(r * 255),\r\n        g : inRange0to255Rounded(g * 255),\r\n        b : inRange0to255Rounded(b * 255)\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/conversion/xyz2rgb.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/conversion/xyz2rgb.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport { AbstractDistanceCalculator } from \"./abstractDistanceCalculator\"\r\nimport { CIE94Textiles, CIE94GraphicArts } from \"./cie94\"\r\nimport { CIEDE2000 } from \"./ciede2000\"\r\nimport { CMETRIC } from \"./cmetric\"\r\nimport { AbstractEuclidean, Euclidean, EuclideanRgbQuantWOAlpha, EuclideanRgbQuantWithAlpha } from \"./euclidean\"\r\nimport { AbstractManhattan, Manhattan, ManhattanSRGB, ManhattanNommyde } from \"./manhattan\"\r\nimport { PNGQUANT } from \"./pngQuant\"\r\n\r\nexport {\r\n    AbstractDistanceCalculator,\r\n    CIE94Textiles,\r\n    CIE94GraphicArts,\r\n    CIEDE2000,\r\n    CMETRIC,\r\n    PNGQUANT,\r\n\r\n    AbstractEuclidean,\r\n    Euclidean,\r\n    EuclideanRgbQuantWithAlpha,\r\n    EuclideanRgbQuantWOAlpha,\r\n\r\n    AbstractManhattan,\r\n    Manhattan,\r\n    ManhattanSRGB,\r\n    ManhattanNommyde\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/index.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/distance/index.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * common.ts - part of Image Quantization Library\r\n */\r\nimport { Point } from \"../utils/point\"\r\n\r\nexport abstract class AbstractDistanceCalculator {\r\n    protected _maxDistance : number;\r\n    protected _whitePoint : { r : number; g : number; b : number; a : number };\r\n\r\n    constructor() {\r\n        this._setDefaults();\r\n\r\n        // set default maximal color component deltas (255 - 0 = 255)\r\n        this.setWhitePoint(255, 255, 255, 255);\r\n    }\r\n\r\n    setWhitePoint(r : number, g : number, b : number, a : number) : void {\r\n        this._whitePoint  = {\r\n            r : (r > 0) ? 255 / r : 0,\r\n            g : (g > 0) ? 255 / g : 0,\r\n            b : (b > 0) ? 255 / b : 0,\r\n            a : (a > 0) ? 255 / a : 0\r\n        };\r\n        this._maxDistance = this.calculateRaw(r, g, b, a, 0, 0, 0, 0);\r\n    }\r\n\r\n    calculateNormalized(colorA : Point, colorB : Point) : number {\r\n        return this.calculateRaw(colorA.r, colorA.g, colorA.b, colorA.a, colorB.r, colorB.g, colorB.b, colorB.a) / this._maxDistance;\r\n    }\r\n\r\n    protected _setDefaults() : void {\r\n    }\r\n\r\n    /**\r\n     * Calculate raw distance (non-normalized)\r\n     */\r\n    abstract calculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number;\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/abstractDistanceCalculator.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/distance/abstractDistanceCalculator.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * cie94.ts - part of Image Quantization Library\r\n */\r\nimport { AbstractDistanceCalculator } from \"./abstractDistanceCalculator\"\r\nimport { rgb2lab } from \"../conversion/rgb2lab\"\r\nimport { inRange0to255 } from \"../utils/arithmetic\"\r\n\r\n/**\r\n * CIE94 method of delta-e\r\n * http://en.wikipedia.org/wiki/Color_difference#CIE94\r\n */\r\nexport abstract class AbstractCIE94 extends AbstractDistanceCalculator {\r\n    /**\r\n     * Weight in distance: 0.25\r\n     * Max DeltaE: 100\r\n     * Max DeltaA: 255\r\n     */\r\n    protected _kA : number;\r\n    protected _Kl : number;\r\n    protected _K1 : number;\r\n    protected _K2 : number;\r\n\r\n    calculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n        const lab1 = rgb2lab(inRange0to255(r1 * this._whitePoint.r), inRange0to255(g1 * this._whitePoint.g), inRange0to255(b1 * this._whitePoint.b)),\r\n              lab2 = rgb2lab(inRange0to255(r2 * this._whitePoint.r), inRange0to255(g2 * this._whitePoint.g), inRange0to255(b2 * this._whitePoint.b));\r\n\r\n        const dL = lab1.L - lab2.L,\r\n              dA = lab1.a - lab2.a,\r\n              dB = lab1.b - lab2.b,\r\n              c1 = Math.sqrt(lab1.a * lab1.a + lab1.b * lab1.b),\r\n              c2 = Math.sqrt(lab2.a * lab2.a + lab2.b * lab2.b),\r\n              dC = c1 - c2;\r\n\r\n        let deltaH = dA * dA + dB * dB - dC * dC;\r\n        deltaH     = deltaH < 0 ? 0 : Math.sqrt(deltaH);\r\n\r\n        const dAlpha = (a2 - a1) * this._whitePoint.a * this._kA;\r\n\r\n        // TODO: add alpha channel support\r\n        return Math.sqrt(\r\n            Math.pow(dL / this._Kl, 2) +\r\n            Math.pow(dC / (1.0 + this._K1 * c1), 2) +\r\n            Math.pow(deltaH / (1.0 + this._K2 * c1), 2) +\r\n            Math.pow(dAlpha, 2)\r\n        );\r\n    }\r\n}\r\n\r\nexport class CIE94Textiles extends AbstractCIE94 {\r\n    protected _setDefaults() {\r\n        this._Kl = 2.0;\r\n        this._K1 = 0.048;\r\n        this._K2 = 0.014;\r\n        this._kA = 0.25 * 50 / 255;\r\n    }\r\n}\r\n\r\nexport class CIE94GraphicArts extends AbstractCIE94 {\r\n    protected _setDefaults() {\r\n        this._Kl = 1.0;\r\n        this._K1 = 0.045;\r\n        this._K2 = 0.015;\r\n        this._kA = 0.25 * 100 / 255;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/cie94.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/distance/cie94.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * ciede2000.ts - part of Image Quantization Library\r\n */\r\nimport { AbstractDistanceCalculator } from \"./abstractDistanceCalculator\";\r\nimport { rgb2lab } from \"../conversion/rgb2lab\";\r\nimport { degrees2radians, inRange0to255 } from \"../utils/arithmetic\";\r\n\r\n/**\r\n * CIEDE2000 algorithm - Adapted from Sharma et al's MATLAB implementation at\r\n * http://www.ece.rochester.edu/~gsharma/ciede2000/\r\n */\r\nexport class CIEDE2000 extends AbstractDistanceCalculator {\r\n    /**\r\n     * Weight in distance: 0.25\r\n     * Max DeltaE: 100\r\n     * Max DeltaA: 255\r\n     */\r\n    private static readonly _kA                   = 0.25 * 100 / 255;\r\n    private static readonly _pow25to7 : number    = Math.pow(25, 7);\r\n    private static readonly _deg360InRad : number = degrees2radians(360);\r\n    private static readonly _deg180InRad : number = degrees2radians(180);\r\n    private static readonly _deg30InRad : number  = degrees2radians(30);\r\n    private static readonly _deg6InRad : number   = degrees2radians(6);\r\n    private static readonly _deg63InRad : number  = degrees2radians(63);\r\n    private static readonly _deg275InRad : number = degrees2radians(275);\r\n    private static readonly _deg25InRad : number  = degrees2radians(25);\r\n\r\n    calculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n        const lab1 = rgb2lab(inRange0to255(r1 * this._whitePoint.r), inRange0to255(g1 * this._whitePoint.g), inRange0to255(b1 * this._whitePoint.b)),\r\n              lab2 = rgb2lab(inRange0to255(r2 * this._whitePoint.r), inRange0to255(g2 * this._whitePoint.g), inRange0to255(b2 * this._whitePoint.b)),\r\n              dA   = (a2 - a1) * this._whitePoint.a * CIEDE2000._kA,\r\n              dE2  = this.calculateRawInLab(lab1, lab2);\r\n\r\n        return Math.sqrt(dE2 + dA * dA);\r\n    }\r\n\r\n    calculateRawInLab(Lab1 : {L : number; a : number; b : number}, Lab2 : {L : number; a : number; b : number}) : number {\r\n        // Get L,a,b values for color 1\r\n        const L1 = Lab1.L,\r\n              a1 = Lab1.a,\r\n              b1 = Lab1.b;\r\n\r\n        // Get L,a,b values for color 2\r\n        const L2 = Lab2.L,\r\n              a2 = Lab2.a,\r\n              b2 = Lab2.b;\r\n\r\n        // Calculate Cprime1, Cprime2, Cabbar\r\n        const C1                  = Math.sqrt(a1 * a1 + b1 * b1),\r\n              C2                  = Math.sqrt(a2 * a2 + b2 * b2),\r\n              pow_a_C1_C2_to_7    = Math.pow((C1 + C2) / 2.0, 7.0),\r\n\r\n              G                   = 0.5 * (1.0 - Math.sqrt(pow_a_C1_C2_to_7 / (pow_a_C1_C2_to_7 + CIEDE2000._pow25to7))), //25^7\r\n              a1p                 = (1.0 + G) * a1,\r\n              a2p                 = (1.0 + G) * a2,\r\n\r\n              C1p                 = Math.sqrt(a1p * a1p + b1 * b1),\r\n              C2p                 = Math.sqrt(a2p * a2p + b2 * b2),\r\n              C1pC2p              = C1p * C2p,\r\n\r\n              // Angles in Degree.\r\n              h1p                 = CIEDE2000._calculatehp(b1, a1p),\r\n              h2p                 = CIEDE2000._calculatehp(b2, a2p),\r\n              h_bar               = Math.abs(h1p - h2p),\r\n              dLp                 = L2 - L1,\r\n              dCp                 = C2p - C1p,\r\n              dHp                 = CIEDE2000._calculate_dHp(C1pC2p, h_bar, h2p, h1p),\r\n              ahp                 = CIEDE2000._calculate_ahp(C1pC2p, h_bar, h1p, h2p),\r\n\r\n              T                   = CIEDE2000._calculateT(ahp),\r\n\r\n              aCp                 = (C1p + C2p) / 2.0,\r\n              aLp_minus_50_square = Math.pow((L1 + L2) / 2.0 - 50.0, 2.0),\r\n              S_L                 = 1.0 + (.015 * aLp_minus_50_square) / Math.sqrt(20.0 + aLp_minus_50_square),\r\n              S_C                 = 1.0 + .045 * aCp,\r\n              S_H                 = 1.0 + .015 * T * aCp,\r\n\r\n              R_T                 = CIEDE2000._calculateRT(ahp, aCp),\r\n\r\n              dLpSL               = dLp / S_L, // S_L * kL, where kL is 1.0\r\n              dCpSC               = dCp / S_C, // S_C * kC, where kC is 1.0\r\n              dHpSH               = dHp / S_H; // S_H * kH, where kH is 1.0\r\n\r\n        return Math.pow(dLpSL, 2) + Math.pow(dCpSC, 2) + Math.pow(dHpSH, 2) + R_T * dCpSC * dHpSH;\r\n    }\r\n\r\n    private static _calculatehp(b : number, ap : number) {\r\n        const hp = Math.atan2(b, ap);\r\n        if (hp >= 0) return hp;\r\n        return hp + CIEDE2000._deg360InRad;\r\n    }\r\n\r\n    private static _calculateRT(ahp : number, aCp : number) {\r\n        const aCp_to_7    = Math.pow(aCp, 7.0),\r\n              R_C         = 2.0 * Math.sqrt(aCp_to_7 / (aCp_to_7 + CIEDE2000._pow25to7)), // 25^7\r\n              delta_theta = CIEDE2000._deg30InRad * Math.exp(-Math.pow((ahp - CIEDE2000._deg275InRad) / CIEDE2000._deg25InRad, 2.0));\r\n        return -Math.sin(2.0 * delta_theta) * R_C;\r\n    }\r\n\r\n    private static _calculateT(ahp : number) {\r\n        return 1.0 - .17 * Math.cos(ahp - CIEDE2000._deg30InRad) + .24 * Math.cos(ahp * 2.0) + .32 * Math.cos(ahp * 3.0 + CIEDE2000._deg6InRad) - .2 * Math.cos(ahp * 4.0 - CIEDE2000._deg63InRad);\r\n    }\r\n\r\n    private static _calculate_ahp(C1pC2p : number, h_bar : number, h1p : number, h2p : number) {\r\n        const hpSum = h1p + h2p;\r\n        if (C1pC2p == 0) return hpSum;\r\n        if (h_bar <= CIEDE2000._deg180InRad) return hpSum / 2.0;\r\n        if (hpSum < CIEDE2000._deg360InRad) return (hpSum + CIEDE2000._deg360InRad) / 2.0;\r\n        return (hpSum - CIEDE2000._deg360InRad) / 2.0;\r\n    }\r\n\r\n    private static _calculate_dHp(C1pC2p : number, h_bar : number, h2p : number, h1p : number) {\r\n        let dhp : number;\r\n        if (C1pC2p == 0) {\r\n            dhp = 0;\r\n        } else if (h_bar <= CIEDE2000._deg180InRad) {\r\n            dhp = h2p - h1p;\r\n        } else if (h2p <= h1p) {\r\n            dhp = h2p - h1p + CIEDE2000._deg360InRad;\r\n        } else {\r\n            dhp = h2p - h1p - CIEDE2000._deg360InRad;\r\n        }\r\n        return 2.0 * Math.sqrt(C1pC2p) * Math.sin(dhp / 2.0);\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/ciede2000.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/distance/ciede2000.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * cmetric.ts - part of Image Quantization Library\r\n */\r\nimport { AbstractDistanceCalculator } from \"./abstractDistanceCalculator\"\r\n\r\n/**\r\n * TODO: Name it: http://www.compuphase.com/cmetric.htm\r\n */\r\nexport class CMETRIC extends AbstractDistanceCalculator {\r\n    calculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n        const rmean = (r1 + r2) / 2 * this._whitePoint.r,\r\n              r     = (r1 - r2) * this._whitePoint.r,\r\n              g     = (g1 - g2) * this._whitePoint.g,\r\n              b     = (b1 - b2) * this._whitePoint.b,\r\n              dE    = ((((512 + rmean) * r * r) >> 8) + 4 * g * g + (((767 - rmean) * b * b) >> 8)),\r\n              dA    = (a2 - a1) * this._whitePoint.a;\r\n\r\n        return Math.sqrt(dE + dA * dA);\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/cmetric.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/distance/cmetric.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * euclidean.ts - part of Image Quantization Library\r\n */\r\nimport { AbstractDistanceCalculator } from \"./abstractDistanceCalculator\"\r\nimport { Y } from \"../constants/bt709\"\r\n\r\n/**\r\n * Euclidean color distance\r\n */\r\nexport class AbstractEuclidean extends AbstractDistanceCalculator {\r\n    protected _kR : number;\r\n    protected _kG : number;\r\n    protected _kB : number;\r\n    protected _kA : number;\r\n\r\n    calculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n        const dR = r2 - r1, dG = g2 - g1, dB = b2 - b1, dA = a2 - a1;\r\n        return Math.sqrt(this._kR * dR * dR + this._kG * dG * dG + this._kB * dB * dB + this._kA * dA * dA);\r\n    }\r\n}\r\n\r\nexport class Euclidean extends AbstractEuclidean {\r\n    protected _setDefaults() {\r\n        this._kR = 1;\r\n        this._kG = 1;\r\n        this._kB = 1;\r\n        this._kA = 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Euclidean color distance (RgbQuant modification w Alpha)\r\n */\r\nexport class EuclideanRgbQuantWithAlpha extends AbstractEuclidean {\r\n    protected _setDefaults() {\r\n        this._kR = Y.RED;\r\n        this._kG = Y.GREEN;\r\n        this._kB = Y.BLUE;\r\n        // TODO: what is the best coefficient below?\r\n        this._kA = 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Euclidean color distance (RgbQuant modification w/o Alpha)\r\n */\r\nexport class EuclideanRgbQuantWOAlpha extends AbstractEuclidean {\r\n    protected _setDefaults() {\r\n        this._kR = Y.RED;\r\n        this._kG = Y.GREEN;\r\n        this._kB = Y.BLUE;\r\n        this._kA = 0;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/euclidean.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/distance/euclidean.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * manhattanNeuQuant.ts - part of Image Quantization Library\r\n */\r\nimport { AbstractDistanceCalculator } from \"./abstractDistanceCalculator\"\r\nimport { Y } from \"../constants/bt709\"\r\n\r\n/**\r\n * Manhattan distance (NeuQuant modification) - w/o sRGB coefficients\r\n */\r\nexport abstract class AbstractManhattan extends AbstractDistanceCalculator {\r\n    protected _kR : number;\r\n    protected _kG : number;\r\n    protected _kB : number;\r\n    protected _kA : number;\r\n\r\n    calculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n        let dR = r2 - r1, dG = g2 - g1, dB = b2 - b1, dA = a2 - a1;\r\n        if (dR < 0) dR = 0 - dR;\r\n        if (dG < 0) dG = 0 - dG;\r\n        if (dB < 0) dB = 0 - dB;\r\n        if (dA < 0) dA = 0 - dA;\r\n\r\n        return this._kR * dR + this._kG * dG + this._kB * dB + this._kA * dA;\r\n    }\r\n}\r\n\r\nexport class Manhattan extends AbstractManhattan {\r\n    protected _setDefaults() {\r\n        this._kR = 1;\r\n        this._kG = 1;\r\n        this._kB = 1;\r\n        this._kA = 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Manhattan distance (Nommyde modification)\r\n * https://github.com/igor-bezkrovny/image-quantization/issues/4#issuecomment-235155320\r\n */\r\nexport class ManhattanNommyde extends AbstractManhattan {\r\n    protected _setDefaults() {\r\n        this._kR = 0.4984;\r\n        this._kG = 0.8625;\r\n        this._kB = 0.2979;\r\n        // TODO: what is the best coefficient below?\r\n        this._kA = 1;\r\n    }\r\n}\r\n\r\n/**\r\n * Manhattan distance (sRGB coefficients)\r\n */\r\nexport class ManhattanSRGB extends AbstractManhattan {\r\n    protected _setDefaults() {\r\n        this._kR = Y.RED;\r\n        this._kG = Y.GREEN;\r\n        this._kB = Y.BLUE;\r\n        // TODO: what is the best coefficient below?\r\n        this._kA = 1;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/manhattan.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/distance/manhattan.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * pngQuant.ts - part of Image Quantization Library\r\n */\r\nimport { AbstractDistanceCalculator } from \"./abstractDistanceCalculator\"\r\n\r\n/**\r\n * TODO: check quality of this distance equation\r\n * TODO: ask author for usage rights\r\n * taken from:\r\n * {@link http://stackoverflow.com/questions/4754506/color-similarity-distance-in-rgba-color-space/8796867#8796867}\r\n * {@link https://github.com/pornel/pngquant/blob/cc39b47799a7ff2ef17b529f9415ff6e6b213b8f/lib/pam.h#L148}\r\n */\r\nexport class PNGQUANT extends AbstractDistanceCalculator {\r\n    /**\r\n     * Author's comments\r\n     * px_b.rgb = px.rgb + 0*(1-px.a) // blend px on black\r\n     * px_b.a   = px.a   + 1*(1-px.a)\r\n     * px_w.rgb = px.rgb + 1*(1-px.a) // blend px on white\r\n     * px_w.a   = px.a   + 1*(1-px.a)\r\n\r\n     * px_b.rgb = px.rgb              // difference same as in opaque RGB\r\n     * px_b.a   = 1\r\n     * px_w.rgb = px.rgb - px.a       // difference simplifies to formula below\r\n     * px_w.a   = 1\r\n\r\n     * (px.rgb - px.a) - (py.rgb - py.a)\r\n     * (px.rgb - py.rgb) + (py.a - px.a)\r\n     *\r\n     */\r\n    calculateRaw(r1 : number, g1 : number, b1 : number, a1 : number, r2 : number, g2 : number, b2 : number, a2 : number) : number {\r\n        const alphas = (a2 - a1) * this._whitePoint.a;\r\n        return this._colordifference_ch(r1 * this._whitePoint.r, r2 * this._whitePoint.r, alphas) +\r\n            this._colordifference_ch(g1 * this._whitePoint.g, g2 * this._whitePoint.g, alphas) +\r\n            this._colordifference_ch(b1 * this._whitePoint.b, b2 * this._whitePoint.b, alphas);\r\n    }\r\n\r\n    private _colordifference_ch(x : number, y : number, alphas : number) {\r\n        // maximum of channel blended on white, and blended on black\r\n        // premultiplied alpha and backgrounds 0/1 shorten the formula\r\n        const black = x - y,\r\n              white = black + alphas;\r\n\r\n        return black * black + white * white;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/distance/pngQuant.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/distance/pngQuant.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport { IPaletteQuantizer } from \"./common\"\r\nimport { NeuQuant } from \"./neuquant/neuquant\"\r\nimport { NeuQuantFloat } from \"./neuquant/neuquantFloat\"\r\nimport { RGBQuant } from \"./rgbquant/rgbquant\"\r\nimport { ColorHistogram } from \"./rgbquant/colorHistogram\"\r\nimport { WuQuant, WuColorCube } from \"./wu/wuQuant\"\r\n\r\nexport {\r\n    IPaletteQuantizer,\r\n\r\n    NeuQuant,\r\n    NeuQuantFloat,\r\n    RGBQuant,\r\n    WuQuant,\r\n\r\n    ColorHistogram,\r\n    WuColorCube\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/index.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/palette/index.ts","/*\r\n * NeuQuant Neural-Net Quantization Algorithm\r\n * ------------------------------------------\r\n *\r\n * Copyright (c) 1994 Anthony Dekker\r\n *\r\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\r\n * \"Kohonen neural networks for optimal colour quantization\" in \"Network:\r\n * Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\r\n * the algorithm.\r\n *\r\n * Any party obtaining a copy of these files from the author, directly or\r\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\r\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal in\r\n * this software and documentation files (the \"Software\"), including without\r\n * limitation the rights to use, copy, modify, merge, publish, distribute,\r\n * sublicense, and/or sell copies of the Software, and to permit persons who\r\n * receive copies from any such party to do so, with the only requirement being\r\n * that this copyright notice remain intact.\r\n */\r\n\r\n/**\r\n * @preserve TypeScript port:\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * neuquant.ts - part of Image Quantization Library\r\n */\r\n\r\nimport { Palette } from \"../../utils/palette\"\r\nimport { Point } from \"../../utils/point\"\r\nimport { PointContainer } from \"../../utils/pointContainer\"\r\nimport { AbstractDistanceCalculator } from \"../../distance/abstractDistanceCalculator\"\r\nimport { IPaletteQuantizer } from \"../common\"\r\n\r\n// bias for colour values\r\nconst networkBiasShift = 3;\r\n\r\nclass Neuron {\r\n    r : number;\r\n    g : number;\r\n    b : number;\r\n    a : number;\r\n\r\n    constructor(defaultValue : number) {\r\n        this.r = this.g = this.b = this.a = defaultValue;\r\n    }\r\n\r\n    /**\r\n     * There is a fix in original NEUQUANT by Anthony Dekker (http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\r\n     * @example\r\n     * r = Math.min(255, (neuron.r + (1 << (networkBiasShift - 1))) >> networkBiasShift);\r\n     */\r\n    toPoint() : Point {\r\n        return Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\r\n    }\r\n\r\n    subtract(r : number, g : number, b : number, a : number) : void {\r\n        this.r -= r | 0;\r\n        this.g -= g | 0;\r\n        this.b -= b | 0;\r\n        this.a -= a | 0;\r\n    }\r\n\r\n    /*\r\n     public subtract(r : number, g : number, b : number, a : number) : void {\r\n     this.r = (-r + this.r) | 0;\r\n     this.g = (-g + this.g) | 0;\r\n     this.b = (-b + this.b) | 0;\r\n     this.a = (-a + this.a) | 0;\r\n\r\n     this.r -= r;\r\n     this.g -= g;\r\n     this.b -= b;\r\n     this.a -= a;\r\n\r\n     this.r -= r | 0;\r\n     this.g -= g | 0;\r\n     this.b -= b | 0;\r\n     this.a -= a | 0;\r\n     }\r\n     */\r\n}\r\n\r\nexport class NeuQuant implements IPaletteQuantizer {\r\n    /*\r\n     four primes near 500 - assume no image has a length so large\r\n     that it is divisible by all four primes\r\n     */\r\n    private static readonly _prime1 : number          = 499;\r\n    private static readonly _prime2 : number          = 491;\r\n    private static readonly _prime3 : number          = 487;\r\n    private static readonly _prime4 : number          = 503;\r\n    private static readonly _minpicturebytes : number = NeuQuant._prime4;\r\n\r\n    // no. of learning cycles\r\n    private static readonly _nCycles : number = 100;\r\n\r\n    // defs for freq and bias\r\n    private static readonly _initialBiasShift : number = 16;\r\n\r\n    // bias for fractions\r\n    private static readonly _initialBias : number = (1 << NeuQuant._initialBiasShift);\r\n    private static readonly _gammaShift : number  = 10;\r\n\r\n    // gamma = 1024\r\n    // TODO: why gamma is never used?\r\n    //private static _gamma : number     = (1 << NeuQuant._gammaShift);\r\n    private static readonly _betaShift : number = 10;\r\n    private static readonly _beta : number      = (NeuQuant._initialBias >> NeuQuant._betaShift);\r\n\r\n    // beta = 1/1024\r\n    private static readonly _betaGamma : number = (NeuQuant._initialBias << (NeuQuant._gammaShift - NeuQuant._betaShift));\r\n\r\n    /*\r\n     * for 256 cols, radius starts\r\n     */\r\n    private static readonly _radiusBiasShift : number = 6;\r\n\r\n    // at 32.0 biased by 6 bits\r\n    private static readonly _radiusBias : number = 1 << NeuQuant._radiusBiasShift;\r\n\r\n    // and decreases by a factor of 1/30 each cycle\r\n    private static readonly _radiusDecrease : number = 30;\r\n\r\n    /* defs for decreasing alpha factor */\r\n\r\n    // alpha starts at 1.0\r\n    private static readonly _alphaBiasShift : number = 10;\r\n\r\n    // biased by 10 bits\r\n    private static readonly _initAlpha : number = (1 << NeuQuant._alphaBiasShift);\r\n\r\n    /* radBias and alphaRadBias used for radpower calculation */\r\n    private static readonly _radBiasShift : number      = 8;\r\n    private static readonly _radBias : number           = 1 << NeuQuant._radBiasShift;\r\n    private static readonly _alphaRadBiasShift : number = NeuQuant._alphaBiasShift + NeuQuant._radBiasShift;\r\n    private static readonly _alphaRadBias : number      = 1 << NeuQuant._alphaRadBiasShift;\r\n\r\n    private _pointArray : Point[];\r\n    private readonly _networkSize : number;\r\n    private _network : Neuron[];\r\n\r\n    /** sampling factor 1..30 */\r\n    private readonly _sampleFactor : number;\r\n    private _radPower : number[];\r\n\r\n    // bias and freq arrays for learning\r\n    private _freq : number[];\r\n\r\n    /* for network lookup - really 256 */\r\n    private _bias : number[];\r\n    private readonly _distance : AbstractDistanceCalculator;\r\n\r\n    constructor(colorDistanceCalculator : AbstractDistanceCalculator, colors : number = 256) {\r\n        this._distance     = colorDistanceCalculator;\r\n        this._pointArray   = [];\r\n        this._sampleFactor = 1;\r\n        this._networkSize  = colors;\r\n\r\n        this._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\r\n    }\r\n\r\n    sample(pointBuffer : PointContainer) : void {\r\n        this._pointArray = this._pointArray.concat(pointBuffer.getPointArray());\r\n    }\r\n\r\n    quantize() : Palette {\r\n        this._init();\r\n        this._learn();\r\n\r\n        return this._buildPalette();\r\n    }\r\n\r\n    private _init() : void {\r\n        this._freq     = [];\r\n        this._bias     = [];\r\n        this._radPower = [];\r\n        this._network  = [];\r\n        for (let i = 0; i < this._networkSize; i++) {\r\n            this._network[ i ] = new Neuron((i << (networkBiasShift + 8)) / this._networkSize | 0);\r\n\r\n            // 1/this._networkSize\r\n            this._freq[ i ] = NeuQuant._initialBias / this._networkSize | 0;\r\n            this._bias[ i ] = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Main Learning Loop\r\n     */\r\n    private _learn() : void {\r\n        let sampleFactor   = this._sampleFactor;\r\n        const pointsNumber = this._pointArray.length;\r\n        if (pointsNumber < NeuQuant._minpicturebytes) sampleFactor = 1;\r\n\r\n        const alphadec       = 30 + (sampleFactor - 1) / 3 | 0,\r\n              pointsToSample = pointsNumber / sampleFactor | 0;\r\n\r\n        let delta  = pointsToSample / NeuQuant._nCycles | 0,\r\n            alpha  = NeuQuant._initAlpha,\r\n            radius = (this._networkSize >> 3) * NeuQuant._radiusBias;\r\n\r\n        let rad = radius >> NeuQuant._radiusBiasShift;\r\n        if (rad <= 1) rad = 0;\r\n\r\n        for (let i = 0; i < rad; i++) {\r\n            this._radPower[ i ] = alpha * (((rad * rad - i * i) * NeuQuant._radBias) / (rad * rad)) >>> 0;\r\n        }\r\n\r\n        let step : number;\r\n        if (pointsNumber < NeuQuant._minpicturebytes) {\r\n            step = 1;\r\n        } else if (pointsNumber % NeuQuant._prime1 != 0) {\r\n            step = NeuQuant._prime1;\r\n        } else if ((pointsNumber % NeuQuant._prime2) != 0) {\r\n            step = NeuQuant._prime2;\r\n        } else if ((pointsNumber % NeuQuant._prime3) != 0) {\r\n            step = NeuQuant._prime3;\r\n        } else {\r\n            step = NeuQuant._prime4;\r\n        }\r\n\r\n        for (let i = 0, pointIndex = 0; i < pointsToSample;) {\r\n            const point       = this._pointArray[ pointIndex ],\r\n                  b           = point.b << networkBiasShift,\r\n                  g           = point.g << networkBiasShift,\r\n                  r           = point.r << networkBiasShift,\r\n                  a           = point.a << networkBiasShift,\r\n                  neuronIndex = this._contest(b, g, r, a);\r\n\r\n            this._alterSingle(alpha, neuronIndex, b, g, r, a);\r\n            if (rad !== 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\r\n\r\n            /* alter neighbours */\r\n            pointIndex += step;\r\n            if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\r\n            i++;\r\n\r\n            if (delta === 0) delta = 1;\r\n\r\n            if (i % delta === 0) {\r\n                alpha -= (alpha / alphadec) | 0;\r\n                radius -= (radius / NeuQuant._radiusDecrease) | 0;\r\n                rad = radius >> NeuQuant._radiusBiasShift;\r\n\r\n                if (rad <= 1) rad = 0;\r\n                for (let j = 0; j < rad; j++) this._radPower[ j ] = alpha * (((rad * rad - j * j) * NeuQuant._radBias) / (rad * rad)) >>> 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _buildPalette() : Palette {\r\n        const palette = new Palette();\r\n\r\n        this._network.forEach(neuron => {\r\n            palette.add(neuron.toPoint());\r\n        });\r\n\r\n        palette.sort();\r\n        return palette;\r\n    }\r\n\r\n    /**\r\n     * Move adjacent neurons by precomputed alpha*(1-((i-j)^2/[r]^2)) in radpower[|i-j|]\r\n     */\r\n    private _alterNeighbour(rad : number, i : number, b : number, g : number, r : number, al : number) : void {\r\n        let lo = i - rad;\r\n        if (lo < -1) lo = -1;\r\n\r\n        let hi = i + rad;\r\n        if (hi > this._networkSize) hi = this._networkSize;\r\n\r\n        let j = i + 1,\r\n            k = i - 1,\r\n            m = 1;\r\n\r\n        while (j < hi || k > lo) {\r\n            const a = this._radPower[ m++ ] / NeuQuant._alphaRadBias;\r\n            if (j < hi) {\r\n                const p = this._network[ j++ ];\r\n                p.subtract(\r\n                    a * (p.r - r),\r\n                    a * (p.g - g),\r\n                    a * (p.b - b),\r\n                    a * (p.a - al)\r\n                );\r\n            }\r\n\r\n            if (k > lo) {\r\n                const p = this._network[ k-- ];\r\n                p.subtract(\r\n                    a * (p.r - r),\r\n                    a * (p.g - g),\r\n                    a * (p.b - b),\r\n                    a * (p.a - al)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Move neuron i towards biased (b,g,r) by factor alpha\r\n     */\r\n    private _alterSingle(alpha : number, i : number, b : number, g : number, r : number, a : number) : void {\r\n        alpha /= NeuQuant._initAlpha;\r\n\r\n        /* alter hit neuron */\r\n        const n = this._network[ i ];\r\n        n.subtract(\r\n            alpha * (n.r - r),\r\n            alpha * (n.g - g),\r\n            alpha * (n.b - b),\r\n            alpha * (n.a - a)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Search for biased BGR values\r\n     * description:\r\n     *    finds closest neuron (min dist) and updates freq\r\n     *    finds best neuron (min dist-bias) and returns position\r\n     *    for frequently chosen neurons, freq[i] is high and bias[i] is negative\r\n     *    bias[i] = _gamma*((1/this._networkSize)-freq[i])\r\n     *\r\n     * Original distance equation:\r\n     *        dist = abs(dR) + abs(dG) + abs(dB)\r\n     */\r\n    private _contest(b : number, g : number, r : number, a : number) : number {\r\n        const multiplier = (255 * 4) << networkBiasShift;\r\n\r\n        let bestd       = ~(1 << 31),\r\n            bestbiasd   = bestd,\r\n            bestpos     = -1,\r\n            bestbiaspos = bestpos;\r\n\r\n        for (let i = 0; i < this._networkSize; i++) {\r\n            const n    = this._network[ i ],\r\n                  dist = this._distance.calculateNormalized(<any>n, <any>{ r, g, b, a }) * multiplier | 0;\r\n\r\n            if (dist < bestd) {\r\n                bestd   = dist;\r\n                bestpos = i;\r\n            }\r\n\r\n            const biasdist = dist - ((this._bias[ i ]) >> (NeuQuant._initialBiasShift - networkBiasShift));\r\n            if (biasdist < bestbiasd) {\r\n                bestbiasd   = biasdist;\r\n                bestbiaspos = i;\r\n            }\r\n            const betafreq = (this._freq[ i ] >> NeuQuant._betaShift);\r\n            this._freq[ i ] -= betafreq;\r\n            this._bias[ i ] += (betafreq << NeuQuant._gammaShift);\r\n        }\r\n        this._freq[ bestpos ] += NeuQuant._beta;\r\n        this._bias[ bestpos ] -= NeuQuant._betaGamma;\r\n        return bestbiaspos;\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/neuquant/neuquant.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/palette/neuquant/neuquant.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * palette.ts - part of Image Quantization Library\r\n */\r\n\r\nimport { Point } from \"./point\"\r\nimport { PointContainer } from \"./pointContainer\"\r\nimport { AbstractDistanceCalculator } from \"../distance/abstractDistanceCalculator\"\r\nimport { rgb2hsl } from \"../conversion/rgb2hsl\"\r\n\r\n// TODO: make paletteArray via pointBuffer, so, export will be available via pointBuffer.exportXXX\r\n\r\nconst hueGroups : number = 10;\r\n\r\nexport function hueGroup(hue : number, segmentsNumber : number) {\r\n    const maxHue = 360,\r\n          seg    = maxHue / segmentsNumber,\r\n          half   = seg / 2;\r\n\r\n    for (let i = 1, mid = seg - half; i < segmentsNumber; i++, mid += seg) {\r\n        if (hue >= mid && hue < mid + seg) return i;\r\n    }\r\n    return 0;\r\n}\r\n\r\nexport class Palette {\r\n    private readonly _pointContainer : PointContainer;\r\n    private readonly _pointArray : Point[]          = [];\r\n    private _i32idx : { [ key : string ] : number } = {};\r\n\r\n    constructor() {\r\n        this._pointContainer = new PointContainer();\r\n        this._pointContainer.setHeight(1);\r\n        this._pointArray = this._pointContainer.getPointArray();\r\n    }\r\n\r\n    add(color : Point) {\r\n        this._pointArray.push(color);\r\n        this._pointContainer.setWidth(this._pointArray.length);\r\n    }\r\n\r\n    has(color : Point) {\r\n        for (let i = this._pointArray.length - 1; i >= 0; i--) {\r\n            if (color.uint32 === this._pointArray[ i ].uint32) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // TOTRY: use HUSL - http://boronine.com/husl/ http://www.husl-colors.org/ https://github.com/husl-colors/husl\r\n    getNearestColor(colorDistanceCalculator : AbstractDistanceCalculator, color : Point) : Point {\r\n        return this._pointArray[ this.getNearestIndex(colorDistanceCalculator, color) | 0 ];\r\n    }\r\n\r\n    getPointContainer() : PointContainer {\r\n        return this._pointContainer;\r\n    }\r\n\r\n    // TOTRY: use HUSL - http://boronine.com/husl/\r\n    /*\r\n     public nearestIndexByUint32(i32) {\r\n     var idx : number = this._nearestPointFromCache(\"\" + i32);\r\n     if (idx >= 0) return idx;\r\n\r\n     var min = 1000,\r\n     rgb = [\r\n     (i32 & 0xff),\r\n     (i32 >>> 8) & 0xff,\r\n     (i32 >>> 16) & 0xff,\r\n     (i32 >>> 24) & 0xff\r\n     ],\r\n     len = this._pointArray.length;\r\n\r\n     idx = 0;\r\n     for (var i = 0; i < len; i++) {\r\n     var dist = Utils.distEuclidean(rgb, this._pointArray[i].rgba);\r\n\r\n     if (dist < min) {\r\n     min = dist;\r\n     idx = i;\r\n     }\r\n     }\r\n\r\n     this._i32idx[i32] = idx;\r\n     return idx;\r\n     }\r\n     */\r\n\r\n    private _nearestPointFromCache(key : string) {\r\n        return typeof this._i32idx[ key ] === \"number\" ? this._i32idx[ key ] : -1;\r\n    }\r\n\r\n    private getNearestIndex(colorDistanceCalculator : AbstractDistanceCalculator, point : Point) : number {\r\n        let idx : number = this._nearestPointFromCache(\"\" + point.uint32);\r\n        if (idx >= 0) return idx;\r\n\r\n        let minimalDistance : number = Number.MAX_VALUE;\r\n\r\n        idx = 0;\r\n        for (let i = 0, l = this._pointArray.length; i < l; i++) {\r\n            const p        = this._pointArray[ i ],\r\n                  distance = colorDistanceCalculator.calculateRaw(point.r, point.g, point.b, point.a, p.r, p.g, p.b, p.a);\r\n\r\n            if (distance < minimalDistance) {\r\n                minimalDistance = distance;\r\n                idx             = i;\r\n            }\r\n        }\r\n\r\n        this._i32idx[ point.uint32 ] = idx;\r\n        return idx;\r\n    }\r\n\r\n    /*\r\n     public reduce(histogram : ColorHistogram, colors : number) {\r\n     if (this._pointArray.length > colors) {\r\n     var idxi32 = histogram.getImportanceSortedColorsIDXI32();\r\n\r\n     // quantize histogram to existing palette\r\n     var keep = [], uniqueColors = 0, idx, pruned = false;\r\n\r\n     for (var i = 0, len = idxi32.length; i < len; i++) {\r\n     // palette length reached, unset all remaining colors (sparse palette)\r\n     if (uniqueColors >= colors) {\r\n     this.prunePal(keep);\r\n     pruned = true;\r\n     break;\r\n     } else {\r\n     idx = this.nearestIndexByUint32(idxi32[i]);\r\n     if (keep.indexOf(idx) < 0) {\r\n     keep.push(idx);\r\n     uniqueColors++;\r\n     }\r\n     }\r\n     }\r\n\r\n     if (!pruned) {\r\n     this.prunePal(keep);\r\n     }\r\n     }\r\n     }\r\n\r\n     // TODO: check usage, not tested!\r\n     public prunePal(keep : number[]) {\r\n     var colors = this._pointArray.length;\r\n     for (var colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\r\n     if (keep.indexOf(colorIndex) < 0) {\r\n\r\n     if(colorIndex + 1 < colors) {\r\n     this._pointArray[ colorIndex ] = this._pointArray [ colors - 1 ];\r\n     }\r\n     --colors;\r\n     //this._pointArray[colorIndex] = null;\r\n     }\r\n     }\r\n     console.log(\"colors pruned: \" + (this._pointArray.length - colors));\r\n     this._pointArray.length = colors;\r\n     this._i32idx = {};\r\n     }\r\n     */\r\n\r\n    // TODO: group very low lum and very high lum colors\r\n    // TODO: pass custom sort order\r\n    // TODO: sort criteria function should be placed to HueStats class\r\n    sort() {\r\n        this._i32idx = {};\r\n        this._pointArray.sort((a : Point, b : Point) => {\r\n            const hslA = rgb2hsl(a.r, a.g, a.b),\r\n                  hslB = rgb2hsl(b.r, b.g, b.b);\r\n\r\n            // sort all grays + whites together\r\n            const hueA = (a.r === a.g && a.g === a.b) ? 0 : 1 + hueGroup(hslA.h, hueGroups),\r\n                  hueB = (b.r === b.g && b.g === b.b) ? 0 : 1 + hueGroup(hslB.h, hueGroups);\r\n            /*\r\n             var hueA = (a.r === a.g && a.g === a.b) ? 0 : 1 + Utils.hueGroup(hslA.h, hueGroups);\r\n             var hueB = (b.r === b.g && b.g === b.b) ? 0 : 1 + Utils.hueGroup(hslB.h, hueGroups);\r\n             */\r\n\r\n            const hueDiff = hueB - hueA;\r\n            if (hueDiff) return -hueDiff;\r\n\r\n            /*\r\n             var lumDiff = Utils.lumGroup(+hslB.l.toFixed(2)) - Utils.lumGroup(+hslA.l.toFixed(2));\r\n             if (lumDiff) return -lumDiff;\r\n             */\r\n            const lA = a.getLuminosity(true),\r\n                  lB = b.getLuminosity(true);\r\n\r\n            if (lB - lA !== 0) return lB - lA;\r\n\r\n            const satDiff = ((hslB.s * 100) | 0) - ((hslA.s * 100) | 0);\r\n            if (satDiff) return -satDiff;\r\n\r\n            return 0;\r\n        });\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/palette.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/utils/palette.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * pointContainer.ts - part of Image Quantization Library\r\n */\r\nimport { Point } from \"./point\"\r\n\r\n/**\r\n * v8 optimizations done.\r\n * fromXXX methods are static to move out polymorphic code from class instance itself.\r\n */\r\nexport class PointContainer {\r\n    private readonly _pointArray : Point[];\r\n    private _width : number;\r\n    private _height : number;\r\n\r\n    constructor() {\r\n        this._width      = 0;\r\n        this._height     = 0;\r\n        this._pointArray = [];\r\n    }\r\n\r\n    getWidth() : number {\r\n        return this._width;\r\n    }\r\n\r\n    getHeight() : number {\r\n        return this._height;\r\n    }\r\n\r\n    setWidth(width : number) : void {\r\n        this._width = width;\r\n    }\r\n\r\n    setHeight(height : number) : void {\r\n        this._height = height;\r\n    }\r\n\r\n    getPointArray() : Point[] {\r\n        return this._pointArray;\r\n    }\r\n\r\n    clone() : PointContainer {\r\n        const clone   = new PointContainer();\r\n        clone._width  = this._width;\r\n        clone._height = this._height;\r\n\r\n        for (let i = 0, l = this._pointArray.length; i < l; i++) {\r\n            clone._pointArray[ i ] = Point.createByUint32(this._pointArray[ i ].uint32 | 0); // \"| 0\" is added for v8 optimization\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    toUint32Array() : Uint32Array {\r\n        const l           = this._pointArray.length,\r\n              uint32Array = new Uint32Array(l);\r\n\r\n        for (let i = 0; i < l; i++) {\r\n            uint32Array[ i ] = this._pointArray[ i ].uint32;\r\n        }\r\n\r\n        return uint32Array;\r\n    }\r\n\r\n    toUint8Array() : Uint8Array {\r\n        return new Uint8Array(this.toUint32Array().buffer);\r\n    }\r\n\r\n    static fromHTMLImageElement(img : HTMLImageElement) : PointContainer {\r\n        const width  = img.naturalWidth,\r\n              height = img.naturalHeight;\r\n\r\n        const canvas  = document.createElement(\"canvas\");\r\n        canvas.width  = width;\r\n        canvas.height = height;\r\n\r\n        const ctx = <CanvasRenderingContext2D>canvas.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0, width, height, 0, 0, width, height);\r\n\r\n        return PointContainer.fromHTMLCanvasElement(canvas);\r\n    }\r\n\r\n    static fromHTMLCanvasElement(canvas : HTMLCanvasElement) : PointContainer {\r\n        const width  = canvas.width,\r\n              height = canvas.height;\r\n\r\n        const ctx     = <CanvasRenderingContext2D>canvas.getContext(\"2d\"),\r\n              imgData = ctx.getImageData(0, 0, width, height);\r\n\r\n        return PointContainer.fromImageData(imgData);\r\n    }\r\n\r\n    static fromNodeCanvas(canvas : any) : PointContainer {\r\n        return PointContainer.fromHTMLCanvasElement(canvas);\r\n    }\r\n\r\n    static fromImageData(imageData : ImageData) : PointContainer {\r\n        const width  = imageData.width,\r\n              height = imageData.height;\r\n\r\n        return PointContainer.fromCanvasPixelArray(imageData.data, width, height);\r\n        /*\r\n         var buf8;\r\n         if (Utils.typeOf(imageData.data) == \"CanvasPixelArray\")\r\n         buf8 = new Uint8Array(imageData.data);\r\n         else\r\n         buf8 = imageData.data;\r\n\r\n         this.fromUint32Array(new Uint32Array(buf8.buffer), width, height);\r\n         */\r\n    }\r\n\r\n    static fromArray(byteArray : number[], width : number, height : number) : PointContainer {\r\n        const uint8array = new Uint8Array(byteArray);\r\n        return PointContainer.fromUint8Array(uint8array, width, height);\r\n    }\r\n\r\n    static fromCanvasPixelArray(data : any, width : number, height : number) : PointContainer {\r\n        return PointContainer.fromArray(data, width, height);\r\n    }\r\n\r\n    static fromUint8Array(uint8array : Uint8Array, width : number, height : number) : PointContainer {\r\n        return PointContainer.fromUint32Array(new Uint32Array(uint8array.buffer), width, height);\r\n    }\r\n\r\n    static fromUint32Array(uint32array : Uint32Array, width : number, height : number) : PointContainer {\r\n        const container = new PointContainer();\r\n\r\n        container._width  = width;\r\n        container._height = height;\r\n\r\n        for (let i = 0, l = uint32array.length; i < l; i++) {\r\n            container._pointArray[ i ] = Point.createByUint32(uint32array[ i ] | 0); // \"| 0\" is added for v8 optimization\r\n        }\r\n\r\n        return container;\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/pointContainer.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/utils/pointContainer.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * point.ts - part of Image Quantization Library\r\n */\r\nimport { Y } from \"../constants/bt709\"\r\n\r\n/**\r\n * v8 optimized class\r\n * 1) \"constructor\" should have initialization with worst types\r\n * 2) \"set\" should have |0 / >>> 0\r\n */\r\nexport class Point {\r\n    r : number;\r\n    g : number;\r\n    b : number;\r\n    a : number;\r\n    uint32 : number;\r\n    rgba : number[]; // TODO: better name is quadruplet or quad may be?\r\n    Lab : { L : number; a : number; b : number };\r\n\r\n    static createByQuadruplet(quadruplet : number[]) : Point {\r\n        const point : Point = new Point();\r\n\r\n        point.r = quadruplet[ 0 ] | 0;\r\n        point.g = quadruplet[ 1 ] | 0;\r\n        point.b = quadruplet[ 2 ] | 0;\r\n        point.a = quadruplet[ 3 ] | 0;\r\n        point._loadUINT32();\r\n        point._loadQuadruplet();\r\n        //point._loadLab();\r\n        return point;\r\n    }\r\n\r\n    static createByRGBA(red : number, green : number, blue : number, alpha : number) : Point {\r\n        const point : Point = new Point();\r\n\r\n        point.r = red | 0;\r\n        point.g = green | 0;\r\n        point.b = blue | 0;\r\n        point.a = alpha | 0;\r\n        point._loadUINT32();\r\n        point._loadQuadruplet();\r\n        //point._loadLab();\r\n        return point;\r\n    }\r\n\r\n    static createByUint32(uint32 : number) : Point {\r\n        const point : Point = new Point();\r\n\r\n        point.uint32 = uint32 >>> 0;\r\n        point._loadRGBA();\r\n        point._loadQuadruplet();\r\n        //point._loadLab();\r\n        return point;\r\n    }\r\n\r\n    constructor() {\r\n        this.uint32 = -1 >>> 0;\r\n        this.r      = this.g = this.b = this.a = 0;\r\n        this.rgba = new Array(4);\r\n        /*[ this.r , this.g , this.b , this.a ]*/\r\n        this.rgba[ 0 ] = 0;\r\n        this.rgba[ 1 ] = 0;\r\n        this.rgba[ 2 ] = 0;\r\n        this.rgba[ 3 ] = 0;\r\n        /*\r\n         this.Lab = {\r\n         L : 0.0,\r\n         a : 0.0,\r\n         b : 0.0\r\n         };\r\n         */\r\n    }\r\n\r\n    from(point : Point) {\r\n        this.r         = point.r;\r\n        this.g         = point.g;\r\n        this.b         = point.b;\r\n        this.a         = point.a;\r\n        this.uint32    = point.uint32;\r\n        this.rgba[ 0 ] = point.r;\r\n        this.rgba[ 1 ] = point.g;\r\n        this.rgba[ 2 ] = point.b;\r\n        this.rgba[ 3 ] = point.a;\r\n\r\n        /*\r\n         this.Lab.L = point.Lab.L;\r\n         this.Lab.a = point.Lab.a;\r\n         this.Lab.b = point.Lab.b;\r\n         */\r\n    }\r\n\r\n    /*\r\n     * TODO:\r\n     Luminance from RGB:\r\n\r\n     Luminance (standard for certain colour spaces): (0.2126*R + 0.7152*G + 0.0722*B) [1]\r\n     Luminance (perceived option 1): (0.299*R + 0.587*G + 0.114*B) [2]\r\n     Luminance (perceived option 2, slower to calculate):  sqrt( 0.241*R^2 + 0.691*G^2 + 0.068*B^2 ) ? sqrt( 0.299*R^2 + 0.587*G^2 + 0.114*B^2 ) (thanks to @MatthewHerbst) [http://alienryderflex.com/hsp.html]\r\n     */\r\n    getLuminosity(useAlphaChannel : boolean) : number {\r\n        let r = this.r,\r\n            g = this.g,\r\n            b = this.b;\r\n\r\n        if (useAlphaChannel) {\r\n            r = Math.min(255, 255 - this.a + this.a * r / 255);\r\n            g = Math.min(255, 255 - this.a + this.a * g / 255);\r\n            b = Math.min(255, 255 - this.a + this.a * b / 255);\r\n        }\r\n\r\n        //var luma = this.r * Point._RED_COEFFICIENT + this.g * Point._GREEN_COEFFICIENT + this.b * Point._BLUE_COEFFICIENT;\r\n\r\n        /*\r\n         if(useAlphaChannel) {\r\n         luma = (luma * (255 - this.a)) / 255;\r\n         }\r\n         */\r\n\r\n        return r * Y.RED + g * Y.GREEN + b * Y.BLUE;\r\n    }\r\n\r\n    private _loadUINT32() {\r\n        this.uint32 = (this.a << 24 | this.b << 16 | this.g << 8 | this.r) >>> 0;\r\n    }\r\n\r\n    private _loadRGBA() {\r\n        this.r = this.uint32 & 0xff;\r\n        this.g = (this.uint32 >>> 8) & 0xff;\r\n        this.b = (this.uint32 >>> 16) & 0xff;\r\n        this.a = (this.uint32 >>> 24) & 0xff;\r\n    }\r\n\r\n    private _loadQuadruplet() {\r\n        this.rgba[ 0 ] = this.r;\r\n        this.rgba[ 1 ] = this.g;\r\n        this.rgba[ 2 ] = this.b;\r\n        this.rgba[ 3 ] = this.a;\r\n\r\n        /*\r\n         var xyz = rgb2xyz(this.r, this.g, this.b);\r\n         var lab = xyz2lab(xyz.x, xyz.y, xyz.z);\r\n         this.lab.l = lab.l;\r\n         this.lab.a = lab.a;\r\n         this.lab.b = lab.b;\r\n         */\r\n    }\r\n\r\n    /*\r\n     private _loadLab() : void {\r\n     var Lab = Color.Conversion.rgb2lab(this.r, this.g, this.b);\r\n     this.Lab.L = Lab.L;\r\n     this.Lab.a = Lab.a;\r\n     this.Lab.b = Lab.b;\r\n     }\r\n     */\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/point.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/utils/point.ts","/*\r\n * NeuQuantFloat Neural-Net Quantization Algorithm\r\n * ------------------------------------------\r\n *\r\n * Copyright (c) 1994 Anthony Dekker\r\n *\r\n * NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\r\n * \"Kohonen neural networks for optimal colour quantization\" in \"Network:\r\n * Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\r\n * the algorithm.\r\n *\r\n * Any party obtaining a copy of these files from the author, directly or\r\n * indirectly, is granted, free of charge, a full and unrestricted irrevocable,\r\n * world-wide, paid up, royalty-free, nonexclusive right and license to deal in\r\n * this software and documentation files (the \"Software\"), including without\r\n * limitation the rights to use, copy, modify, merge, publish, distribute,\r\n * sublicense, and/or sell copies of the Software, and to permit persons who\r\n * receive copies from any such party to do so, with the only requirement being\r\n * that this copyright notice remain intact.\r\n */\r\n/**\r\n * @preserve TypeScript port:\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * neuquant.ts - part of Image Quantization Library\r\n */\r\nimport { Palette } from \"../../utils/palette\"\r\nimport { Point } from \"../../utils/point\"\r\nimport { PointContainer } from \"../../utils/pointContainer\"\r\nimport { AbstractDistanceCalculator } from \"../../distance/abstractDistanceCalculator\"\r\nimport { IPaletteQuantizer } from \"../common\"\r\n\r\n// bias for colour values\r\nconst networkBiasShift = 3;\r\n\r\nclass NeuronFloat {\r\n    r : number;\r\n    g : number;\r\n    b : number;\r\n    a : number;\r\n\r\n    constructor(defaultValue : number) {\r\n        this.r = this.g = this.b = this.a = defaultValue;\r\n    }\r\n\r\n    /**\r\n     * There is a fix in original NEUQUANT by Anthony Dekker (http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\r\n     * @example\r\n     * r = Math.min(255, (neuron.r + (1 << (networkBiasShift - 1))) >> networkBiasShift);\r\n     */\r\n    toPoint() : Point {\r\n        return Point.createByRGBA(this.r >> networkBiasShift, this.g >> networkBiasShift, this.b >> networkBiasShift, this.a >> networkBiasShift);\r\n    }\r\n\r\n    subtract(r : number, g : number, b : number, a : number) : void {\r\n        this.r -= r;\r\n        this.g -= g;\r\n        this.b -= b;\r\n        this.a -= a;\r\n    }\r\n}\r\n\r\nexport class NeuQuantFloat implements IPaletteQuantizer {\r\n    /*\r\n     four primes near 500 - assume no image has a length so large\r\n     that it is divisible by all four primes\r\n     */\r\n    private static readonly _prime1 : number          = 499;\r\n    private static readonly _prime2 : number          = 491;\r\n    private static readonly _prime3 : number          = 487;\r\n    private static readonly _prime4 : number          = 503;\r\n    private static readonly _minpicturebytes : number = NeuQuantFloat._prime4;\r\n\r\n    // no. of learning cycles\r\n    private static readonly _nCycles : number = 100;\r\n\r\n    // defs for freq and bias\r\n    private static readonly _initialBiasShift : number = 16;\r\n\r\n    // bias for fractions\r\n    private static readonly _initialBias : number = (1 << NeuQuantFloat._initialBiasShift);\r\n    private static readonly _gammaShift : number  = 10;\r\n\r\n    // gamma = 1024\r\n    // TODO: why gamma is never used?\r\n    //private static _gamma : number     = (1 << NeuQuantFloat._gammaShift);\r\n    private static readonly _betaShift : number = 10;\r\n    private static readonly _beta : number      = (NeuQuantFloat._initialBias >> NeuQuantFloat._betaShift);\r\n\r\n    // beta = 1/1024\r\n    private static readonly _betaGamma : number = (NeuQuantFloat._initialBias << (NeuQuantFloat._gammaShift - NeuQuantFloat._betaShift));\r\n\r\n    /*\r\n     * for 256 cols, radius starts\r\n     */\r\n    private static readonly _radiusBiasShift : number = 6;\r\n\r\n    // at 32.0 biased by 6 bits\r\n    private static readonly _radiusBias : number = 1 << NeuQuantFloat._radiusBiasShift;\r\n\r\n    // and decreases by a factor of 1/30 each cycle\r\n    private static readonly _radiusDecrease : number = 30;\r\n\r\n    /* defs for decreasing alpha factor */\r\n\r\n    // alpha starts at 1.0\r\n    private static readonly _alphaBiasShift : number = 10;\r\n\r\n    // biased by 10 bits\r\n    private static readonly _initAlpha : number = (1 << NeuQuantFloat._alphaBiasShift);\r\n\r\n    /* radBias and alphaRadBias used for radpower calculation */\r\n    private static readonly _radBiasShift : number      = 8;\r\n    private static readonly _radBias : number           = 1 << NeuQuantFloat._radBiasShift;\r\n    private static readonly _alphaRadBiasShift : number = NeuQuantFloat._alphaBiasShift + NeuQuantFloat._radBiasShift;\r\n    private static readonly _alphaRadBias : number      = 1 << NeuQuantFloat._alphaRadBiasShift;\r\n\r\n    private _pointArray : Point[];\r\n    private readonly _networkSize : number;\r\n    private _network : NeuronFloat[];\r\n\r\n    /** sampling factor 1..30 */\r\n    private readonly _sampleFactor : number;\r\n    private _radPower : number[];\r\n\r\n    // bias and freq arrays for learning\r\n    private _freq : number[];\r\n\r\n    /* for network lookup - really 256 */\r\n    private _bias : number[];\r\n    private readonly _distance : AbstractDistanceCalculator;\r\n\r\n    constructor(colorDistanceCalculator : AbstractDistanceCalculator, colors : number = 256) {\r\n        this._distance     = colorDistanceCalculator;\r\n        this._pointArray   = [];\r\n        this._sampleFactor = 1;\r\n        this._networkSize  = colors;\r\n\r\n        this._distance.setWhitePoint(255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift, 255 << networkBiasShift);\r\n    }\r\n\r\n    sample(pointBuffer : PointContainer) : void {\r\n        this._pointArray = this._pointArray.concat(pointBuffer.getPointArray());\r\n    }\r\n\r\n    quantize() : Palette {\r\n        this._init();\r\n        this._learn();\r\n\r\n        return this._buildPalette();\r\n    }\r\n\r\n    private _init() : void {\r\n        this._freq     = [];\r\n        this._bias     = [];\r\n        this._radPower = [];\r\n        this._network  = [];\r\n        for (let i = 0; i < this._networkSize; i++) {\r\n            this._network[ i ] = new NeuronFloat((i << (networkBiasShift + 8)) / this._networkSize);\r\n\r\n            // 1/this._networkSize\r\n            this._freq[ i ] = NeuQuantFloat._initialBias / this._networkSize;\r\n            this._bias[ i ] = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Main Learning Loop\r\n     */\r\n    private _learn() : void {\r\n        let sampleFactor = this._sampleFactor;\r\n\r\n        let pointsNumber = this._pointArray.length;\r\n        if (pointsNumber < NeuQuantFloat._minpicturebytes) sampleFactor = 1;\r\n\r\n        const alphadec       = 30 + (sampleFactor - 1) / 3,\r\n              pointsToSample = pointsNumber / sampleFactor;\r\n\r\n        let delta  = pointsToSample / NeuQuantFloat._nCycles | 0,\r\n            alpha  = NeuQuantFloat._initAlpha,\r\n            radius = (this._networkSize >> 3) * NeuQuantFloat._radiusBias;\r\n\r\n        let rad = radius >> NeuQuantFloat._radiusBiasShift;\r\n        if (rad <= 1) rad = 0;\r\n\r\n        for (let i = 0; i < rad; i++) {\r\n            this._radPower[ i ] = alpha * (((rad * rad - i * i) * NeuQuantFloat._radBias) / (rad * rad));\r\n        }\r\n\r\n        let step : number;\r\n        if (pointsNumber < NeuQuantFloat._minpicturebytes) {\r\n            step = 1;\r\n        } else if (pointsNumber % NeuQuantFloat._prime1 != 0) {\r\n            step = NeuQuantFloat._prime1;\r\n        } else if ((pointsNumber % NeuQuantFloat._prime2) != 0) {\r\n            step = NeuQuantFloat._prime2;\r\n        } else if ((pointsNumber % NeuQuantFloat._prime3) != 0) {\r\n            step = NeuQuantFloat._prime3;\r\n        } else {\r\n            step = NeuQuantFloat._prime4;\r\n        }\r\n\r\n        for (let i = 0, pointIndex = 0; i < pointsToSample;) {\r\n            const point       = this._pointArray[ pointIndex ],\r\n                  b           = point.b << networkBiasShift,\r\n                  g           = point.g << networkBiasShift,\r\n                  r           = point.r << networkBiasShift,\r\n                  a           = point.a << networkBiasShift,\r\n                  neuronIndex = this._contest(b, g, r, a);\r\n\r\n            this._alterSingle(alpha, neuronIndex, b, g, r, a);\r\n            if (rad != 0) this._alterNeighbour(rad, neuronIndex, b, g, r, a);\r\n\r\n            /* alter neighbours */\r\n            pointIndex += step;\r\n            if (pointIndex >= pointsNumber) pointIndex -= pointsNumber;\r\n            i++;\r\n\r\n            if (delta == 0) delta = 1;\r\n\r\n            if (i % delta == 0) {\r\n                alpha -= (alpha / alphadec);\r\n                radius -= (radius / NeuQuantFloat._radiusDecrease);\r\n                rad = radius >> NeuQuantFloat._radiusBiasShift;\r\n\r\n                if (rad <= 1) rad = 0;\r\n                for (let j = 0; j < rad; j++) this._radPower[ j ] = alpha * (((rad * rad - j * j) * NeuQuantFloat._radBias) / (rad * rad));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private _buildPalette() : Palette {\r\n        const palette = new Palette();\r\n\r\n        this._network.forEach(neuron => {\r\n            palette.add(neuron.toPoint());\r\n        });\r\n\r\n        palette.sort();\r\n        return palette;\r\n    }\r\n\r\n    /**\r\n     * Move adjacent neurons by precomputed alpha*(1-((i-j)^2/[r]^2)) in radpower[|i-j|]\r\n     */\r\n    private _alterNeighbour(rad : number, i : number, b : number, g : number, r : number, al : number) : void {\r\n        let lo = i - rad;\r\n        if (lo < -1) lo = -1;\r\n\r\n        let hi = i + rad;\r\n        if (hi > this._networkSize) hi = this._networkSize;\r\n\r\n        let j = i + 1,\r\n            k = i - 1,\r\n            m = 1;\r\n\r\n        while (j < hi || k > lo) {\r\n            const a = this._radPower[ m++ ] / NeuQuantFloat._alphaRadBias;\r\n            if (j < hi) {\r\n                const p = this._network[ j++ ];\r\n                p.subtract(\r\n                    a * (p.r - r),\r\n                    a * (p.g - g),\r\n                    a * (p.b - b),\r\n                    a * (p.a - al)\r\n                );\r\n            }\r\n\r\n            if (k > lo) {\r\n                const p = this._network[ k-- ];\r\n                p.subtract(\r\n                    a * (p.r - r),\r\n                    a * (p.g - g),\r\n                    a * (p.b - b),\r\n                    a * (p.a - al)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Move neuron i towards biased (b,g,r) by factor alpha\r\n     */\r\n    private _alterSingle(alpha : number, i : number, b : number, g : number, r : number, a : number) : void {\r\n        alpha /= NeuQuantFloat._initAlpha;\r\n\r\n        /* alter hit neuron */\r\n        const n = this._network[ i ];\r\n        n.subtract(\r\n            alpha * (n.r - r),\r\n            alpha * (n.g - g),\r\n            alpha * (n.b - b),\r\n            alpha * (n.a - a)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Search for biased BGR values\r\n     * description:\r\n     *    finds closest neuron (min dist) and updates freq\r\n     *    finds best neuron (min dist-bias) and returns position\r\n     *    for frequently chosen neurons, freq[i] is high and bias[i] is negative\r\n     *    bias[i] = _gamma*((1/this._networkSize)-freq[i])\r\n     *\r\n     * Original distance equation:\r\n     *        dist = abs(dR) + abs(dG) + abs(dB)\r\n     */\r\n    private _contest(b : number, g : number, r : number, al : number) : number {\r\n        const multiplier = (255 * 4) << networkBiasShift;\r\n\r\n        let bestd       = ~(1 << 31),\r\n            bestbiasd   = bestd,\r\n            bestpos     = -1,\r\n            bestbiaspos = bestpos;\r\n\r\n        for (let i = 0; i < this._networkSize; i++) {\r\n            const n    = this._network[ i ],\r\n                  dist = this._distance.calculateNormalized(<any>n, <any>{ r : r, g : g, b : b, a : al }) * multiplier;\r\n\r\n            if (dist < bestd) {\r\n                bestd   = dist;\r\n                bestpos = i;\r\n            }\r\n\r\n            const biasdist = dist - ((this._bias[ i ]) >> (NeuQuantFloat._initialBiasShift - networkBiasShift));\r\n            if (biasdist < bestbiasd) {\r\n                bestbiasd   = biasdist;\r\n                bestbiaspos = i;\r\n            }\r\n            const betafreq = (this._freq[ i ] >> NeuQuantFloat._betaShift);\r\n            this._freq[ i ] -= betafreq;\r\n            this._bias[ i ] += (betafreq << NeuQuantFloat._gammaShift);\r\n        }\r\n        this._freq[ bestpos ] += NeuQuantFloat._beta;\r\n        this._bias[ bestpos ] -= NeuQuantFloat._betaGamma;\r\n        return bestbiaspos;\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/neuquant/neuquantFloat.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/palette/neuquant/neuquantFloat.ts","/*\r\n * Copyright (c) 2015, Leon Sorokin\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * RgbQuant.js - an image quantization lib\r\n */\r\n\r\n/**\r\n * @preserve TypeScript port:\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * rgbquant.ts - part of Image Quantization Library\r\n */\r\n\r\nimport { Palette } from \"../../utils/palette\"\r\nimport { Point } from \"../../utils/point\"\r\nimport { PointContainer } from \"../../utils/pointContainer\"\r\nimport { AbstractDistanceCalculator } from \"../../distance/abstractDistanceCalculator\"\r\nimport { ColorHistogram } from \"./colorHistogram\"\r\nimport { IPaletteQuantizer } from \"../common\"\r\nimport { stableSort } from \"../../utils/arithmetic\"\r\n\r\nclass RemovedColor {\r\n    readonly index : number;\r\n    readonly color : Point;\r\n    readonly distance : number;\r\n\r\n    constructor(index : number, color : Point, distance : number) {\r\n        this.index    = index;\r\n        this.color    = color;\r\n        this.distance = distance;\r\n    }\r\n}\r\n\r\n// TODO: make input/output image and input/output palettes with instances of class Point only!\r\nexport class RGBQuant implements IPaletteQuantizer {\r\n    // desired final palette size\r\n    private readonly _colors : number;\r\n\r\n    // color-distance threshold for initial reduction pass\r\n    private readonly _initialDistance : number;\r\n\r\n    // subsequent passes threshold\r\n    private readonly _distanceIncrement : number;\r\n\r\n    // accumulated histogram\r\n    private readonly _histogram : ColorHistogram;\r\n    private readonly _distance : AbstractDistanceCalculator;\r\n\r\n    constructor(colorDistanceCalculator : AbstractDistanceCalculator, colors : number = 256, method : number = 2) {\r\n        this._distance = colorDistanceCalculator;\r\n        // desired final palette size\r\n        this._colors   = colors;\r\n\r\n        // histogram to accumulate\r\n        this._histogram = new ColorHistogram(method, colors);\r\n\r\n        this._initialDistance   = 0.01;\r\n        this._distanceIncrement = 0.005;\r\n    }\r\n\r\n    // gathers histogram info\r\n    sample(image : PointContainer) : void {\r\n        /*\r\n         var pointArray = image.getPointArray(), max = [0, 0, 0, 0], min = [255, 255, 255, 255];\r\n\r\n         for (var i = 0, l = pointArray.length; i < l; i++) {\r\n         var color = pointArray[i];\r\n         for (var componentIndex = 0; componentIndex < 4; componentIndex++) {\r\n         if (max[componentIndex] < color.rgba[componentIndex]) max[componentIndex] = color.rgba[componentIndex];\r\n         if (min[componentIndex] > color.rgba[componentIndex]) min[componentIndex] = color.rgba[componentIndex];\r\n         }\r\n         }\r\n         var rd = max[0] - min[0], gd = max[1] - min[1], bd = max[2] - min[2], ad = max[3] - min[3];\r\n         this._distance.setWhitePoint(rd, gd, bd, ad);\r\n\r\n         this._initialDistance = (Math.sqrt(rd * rd + gd * gd + bd * bd + ad * ad) / Math.sqrt(255 * 255 + 255 * 255 + 255 * 255)) * 0.01;\r\n         */\r\n\r\n        this._histogram.sample(image);\r\n    }\r\n\r\n    // reduces histogram to palette, remaps & memoizes reduced colors\r\n    quantize() : Palette {\r\n        const idxi32 = this._histogram.getImportanceSortedColorsIDXI32()\r\n        if (idxi32.length === 0) {\r\n            throw new Error(\"No colors in image\")\r\n        }\r\n\r\n        const palette = this._buildPalette(idxi32);\r\n\r\n        palette.sort();\r\n        return palette;\r\n    }\r\n\r\n    // reduces similar colors from an importance-sorted Uint32 rgba array\r\n    private _buildPalette(idxi32 : number[]) : Palette {\r\n        // reduce histogram to create initial palette\r\n        // build full rgb palette\r\n        const palette    = new Palette(),\r\n              colorArray = palette.getPointContainer().getPointArray(),\r\n              usageArray = new Array(idxi32.length);\r\n\r\n        for (let i = 0; i < idxi32.length; i++) {\r\n            colorArray.push(Point.createByUint32(idxi32[ i ]));\r\n            usageArray[ i ] = 1;\r\n        }\r\n\r\n        const len                      = colorArray.length,\r\n              memDist : RemovedColor[] = [];\r\n\r\n        let palLen = len,\r\n            thold  = this._initialDistance;\r\n\r\n        // palette already at or below desired length\r\n        while (palLen > this._colors) {\r\n            memDist.length = 0;\r\n\r\n            // iterate palette\r\n            for (let i = 0; i < len; i++) {\r\n                if (usageArray[ i ] === 0) continue;\r\n                const pxi = colorArray[ i ];\r\n                //if (!pxi) continue;\r\n\r\n                for (let j = i + 1; j < len; j++) {\r\n                    if (usageArray[ j ] === 0) continue;\r\n                    const pxj = colorArray[ j ];\r\n                    //if (!pxj) continue;\r\n\r\n                    const dist = this._distance.calculateNormalized(pxi, pxj);\r\n                    if (dist < thold) {\r\n                        // store index,rgb,dist\r\n                        memDist.push(new RemovedColor(j, pxj, dist));\r\n                        usageArray[ j ] = 0;\r\n                        palLen--;\r\n                    }\r\n                }\r\n            }\r\n            // palette reduction pass\r\n            // console.log(\"palette length: \" + palLen);\r\n\r\n            // if palette is still much larger than target, increment by larger initDist\r\n            thold += (palLen > this._colors * 3) ? this._initialDistance : this._distanceIncrement;\r\n        }\r\n\r\n        // if palette is over-reduced, re-add removed colors with largest distances from last round\r\n        if (palLen < this._colors) {\r\n            // sort descending\r\n            stableSort(memDist, function (a : RemovedColor, b : RemovedColor) {\r\n                return b.distance - a.distance;\r\n            });\r\n\r\n            let k = 0;\r\n            while (palLen < this._colors && k < memDist.length) {\r\n                const removedColor               = memDist[ k ];\r\n                // re-inject rgb into final palette\r\n                usageArray[ removedColor.index ] = 1;\r\n                palLen++;\r\n                k++;\r\n            }\r\n        }\r\n\r\n        let colors = colorArray.length;\r\n        for (let colorIndex = colors - 1; colorIndex >= 0; colorIndex--) {\r\n            if (usageArray[ colorIndex ] === 0) {\r\n                if (colorIndex !== colors - 1) {\r\n                    colorArray[ colorIndex ] = colorArray[ colors - 1 ];\r\n                }\r\n                --colors;\r\n            }\r\n        }\r\n        colorArray.length = colors;\r\n\r\n        return palette;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/rgbquant/rgbquant.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/palette/rgbquant/rgbquant.ts","/*\r\n * Copyright (c) 2015, Leon Sorokin\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * ColorHistogram.js - an image quantization lib\r\n */\r\n\r\n/**\r\n * @preserve TypeScript port:\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * colorHistogram.ts - part of Image Quantization Library\r\n */\r\nimport { HueStatistics } from \"../../utils/hueStatistics\"\r\nimport { PointContainer } from \"../../utils/pointContainer\"\r\nimport { stableSort } from \"../../utils/arithmetic\"\r\n\r\ninterface Box {\r\n    x : number,\r\n    y : number,\r\n    h : number,\r\n    w : number\r\n}\r\n\r\nexport class ColorHistogram {\r\n    private static _boxSize   = [ 64, 64 ];\r\n    private static _boxPixels = 2;\r\n    private static _hueGroups = 10;\r\n\r\n    // 1 = by global population, 2 = subregion population threshold\r\n    private _method : number;\r\n\r\n    // HueStatistics instance\r\n    private _hueStats : HueStatistics;\r\n\r\n    private _histogram : {[color : string] : number};\r\n\r\n    // # of highest-frequency colors to start with for palette reduction\r\n    private _initColors : number;\r\n\r\n    // if > 0, enables hues stats and min-color retention per group\r\n    private _minHueCols : number;\r\n\r\n    constructor(method : number, colors : number) {\r\n        // 1 = by global population, 2 = subregion population threshold\r\n        this._method = method;\r\n\r\n        // if > 0, enables hues stats and min-color retention per group\r\n        this._minHueCols = colors << 2;//opts.minHueCols || 0;\r\n\r\n        // # of highest-frequency colors to start with for palette reduction\r\n        this._initColors = colors << 2;\r\n\r\n        // HueStatistics instance\r\n        this._hueStats = new HueStatistics(ColorHistogram._hueGroups, this._minHueCols);\r\n\r\n        this._histogram = Object.create(null);\r\n    }\r\n\r\n    sample(pointBuffer : PointContainer) : void {\r\n        switch (this._method) {\r\n            case 1:\r\n                this._colorStats1D(pointBuffer);\r\n                break;\r\n            case 2:\r\n                this._colorStats2D(pointBuffer);\r\n                break;\r\n        }\r\n    }\r\n\r\n    getImportanceSortedColorsIDXI32() {\r\n        // TODO: fix typing issue in stableSort func\r\n        const sorted = stableSort(Object.keys(this._histogram), (a, b) => this._histogram[ b ] - this._histogram[ a ]);\r\n        if (sorted.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        let idxi32 : string[];\r\n        switch (this._method) {\r\n            case 1:\r\n                const initialColorsLimit = Math.min(sorted.length, this._initColors),\r\n                      last               = sorted[ initialColorsLimit - 1 ],\r\n                      freq               = this._histogram[ last ];\r\n\r\n                idxi32 = sorted.slice(0, initialColorsLimit);\r\n\r\n                // add any cut off colors with same freq as last\r\n                let pos = initialColorsLimit, len = sorted.length;\r\n                while (pos < len && this._histogram[ sorted[ pos ] ] == freq)\r\n                    idxi32.push(sorted[ pos++ ]);\r\n\r\n                // inject min huegroup colors\r\n                this._hueStats.injectIntoArray(idxi32);\r\n                break;\r\n\r\n            case 2:\r\n                idxi32 = sorted;\r\n                break;\r\n\r\n            default:\r\n                // TODO: rethink errors\r\n                throw new Error(\"Incorrect method\")\r\n        }\r\n\r\n        // int32-ify values\r\n        return (<string[]><any>idxi32).map(function (v : string) {\r\n            return +v;\r\n        });\r\n    }\r\n\r\n    // global top-population\r\n    private _colorStats1D(pointBuffer : PointContainer) {\r\n        const histG      = this._histogram,\r\n              pointArray = pointBuffer.getPointArray(),\r\n              len        = pointArray.length;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            const col = pointArray[ i ].uint32;\r\n\r\n            // collect hue stats\r\n            this._hueStats.check(col);\r\n\r\n            if (col in histG)\r\n                histG[ col ]++;\r\n            else\r\n                histG[ col ] = 1;\r\n        }\r\n    }\r\n\r\n    // population threshold within subregions\r\n    // FIXME: this can over-reduce (few/no colors same?), need a way to keep\r\n    // important colors that dont ever reach local thresholds (gradients?)\r\n    private _colorStats2D(pointBuffer : PointContainer) {\r\n        const width      = pointBuffer.getWidth(),\r\n              height     = pointBuffer.getHeight(),\r\n              pointArray = pointBuffer.getPointArray();\r\n\r\n        const boxW  = ColorHistogram._boxSize[ 0 ],\r\n              boxH  = ColorHistogram._boxSize[ 1 ],\r\n              area  = boxW * boxH,\r\n              boxes = this._makeBoxes(width, height, boxW, boxH),\r\n              histG = this._histogram;\r\n\r\n        boxes.forEach(box => {\r\n            let effc = Math.round((box.w * box.h) / area) * ColorHistogram._boxPixels;\r\n            if (effc < 2) effc = 2;\r\n\r\n            const histL : { [key : string ] : number} = {};\r\n            this._iterateBox(box, width, (i : number) => {\r\n                const col = pointArray[ i ].uint32;\r\n\r\n                // collect hue stats\r\n                this._hueStats.check(col);\r\n\r\n                if (col in histG)\r\n                    histG[ col ]++;\r\n                else if (col in histL) {\r\n                    if (++histL[ col ] >= effc)\r\n                        histG[ col ] = histL[ col ];\r\n                }\r\n                else\r\n                    histL[ col ] = 1;\r\n            });\r\n        });\r\n\r\n        // inject min huegroup colors\r\n        this._hueStats.injectIntoDictionary(histG);\r\n\r\n    }\r\n\r\n    // iterates @bbox within a parent rect of width @wid; calls @fn, passing index within parent\r\n    private _iterateBox(bbox : Box, wid : number, fn : Function) {\r\n        const b    = bbox,\r\n              i0   = b.y * wid + b.x,\r\n              i1   = (b.y + b.h - 1) * wid + (b.x + b.w - 1),\r\n              incr = wid - b.w + 1;\r\n\r\n        let cnt = 0,\r\n            i   = i0;\r\n\r\n        do {\r\n            fn.call(this, i);\r\n            i += (++cnt % b.w == 0) ? incr : 1;\r\n        } while (i <= i1);\r\n    }\r\n\r\n    /**\r\n     *    partitions a rectangle of width x height into\r\n     *    array of boxes stepX x stepY (or less)\r\n     */\r\n    private _makeBoxes(width : number, height : number, stepX : number, stepY : number) {\r\n        const wrem               = width % stepX,\r\n              hrem               = height % stepY,\r\n              xend               = width - wrem,\r\n              yend               = height - hrem,\r\n              boxesArray : Box[] = [];\r\n\r\n        for (let y = 0; y < height; y += stepY)\r\n            for (let x = 0; x < width; x += stepX)\r\n                boxesArray.push({ x, y, w : (x == xend ? wrem : stepX), h : (y == yend ? hrem : stepY) });\r\n\r\n        return boxesArray;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/rgbquant/colorHistogram.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/palette/rgbquant/colorHistogram.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * hueStatistics.ts - part of Image Quantization Library\r\n */\r\nimport { rgb2hsl } from \"../conversion/rgb2hsl\"\r\nimport { hueGroup } from \"./palette\"\r\n\r\nclass HueGroup {\r\n    num : number    = 0;\r\n    cols : number[] = [];\r\n}\r\n\r\nexport class HueStatistics {\r\n    private _numGroups : number;\r\n    private _minCols : number;\r\n    private _stats : HueGroup[];\r\n    private _groupsFull : number;\r\n\r\n    constructor(numGroups : number, minCols : number) {\r\n        this._numGroups = numGroups;\r\n        this._minCols   = minCols;\r\n        this._stats     = [];\r\n\r\n        for (let i = 0; i <= numGroups; i++) {\r\n            this._stats[ i ] = new HueGroup();\r\n        }\r\n\r\n        this._groupsFull = 0;\r\n    }\r\n\r\n    check(i32 : number) {\r\n        if (this._groupsFull == this._numGroups + 1) {\r\n            this.check = function () {\r\n            };\r\n        }\r\n\r\n        const r   = (i32 & 0xff),\r\n              g   = (i32 >>> 8) & 0xff,\r\n              b   = (i32 >>> 16) & 0xff,\r\n              hg  = (r == g && g == b) ? 0 : 1 + hueGroup(rgb2hsl(r, g, b).h, this._numGroups),\r\n              gr  = this._stats[ hg ],\r\n              min = this._minCols;\r\n\r\n        gr.num++;\r\n\r\n        if (gr.num > min)\r\n            return;\r\n        if (gr.num == min)\r\n            this._groupsFull++;\r\n\r\n        if (gr.num <= min)\r\n            this._stats[ hg ].cols.push(i32);\r\n    }\r\n\r\n    injectIntoDictionary(histG : { [key : string ] : number}) {\r\n        for (let i = 0; i <= this._numGroups; i++) {\r\n            if (this._stats[ i ].num <= this._minCols) {\r\n                this._stats[ i ].cols.forEach((col : number) => {\r\n                    if (!histG[ col ])\r\n                        histG[ col ] = 1;\r\n                    else\r\n                        histG[ col ]++;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    injectIntoArray(histG : string[]) {\r\n        for (let i = 0; i <= this._numGroups; i++) {\r\n            if (this._stats[ i ].num <= this._minCols) {\r\n                this._stats[ i ].cols.forEach((col : any) => {\r\n                    if (histG.indexOf(col) == -1)\r\n                        histG.push(col);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/hueStatistics.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/utils/hueStatistics.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * wuQuant.ts - part of Image Quantization Library\r\n */\r\nimport { Palette } from \"../../utils/palette\"\r\nimport { Point } from \"../../utils/point\"\r\nimport { PointContainer } from \"../../utils/pointContainer\"\r\nimport { AbstractDistanceCalculator } from \"../../distance/abstractDistanceCalculator\"\r\n\r\nfunction createArray1D(dimension1 : number) {\r\n    const a : number[] = [];\r\n    for (let k = 0; k < dimension1; k++) {\r\n        a[ k ] = 0;\r\n    }\r\n    return a;\r\n}\r\n\r\nfunction createArray4D(dimension1 : number, dimension2 : number, dimension3 : number, dimension4 : number) : number[][][][] {\r\n    const a = new Array(dimension1);\r\n    for (let i = 0; i < dimension1; i++) {\r\n        a[ i ] = new Array(dimension2);\r\n        for (let j = 0; j < dimension2; j++) {\r\n            a[ i ][ j ] = new Array(dimension3);\r\n            for (let k = 0; k < dimension3; k++) {\r\n                a[ i ][ j ][ k ] = new Array(dimension4);\r\n                for (let l = 0; l < dimension4; l++) {\r\n                    a[ i ][ j ][ k ][ l ] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return a;\r\n}\r\n\r\nfunction createArray3D(dimension1 : number, dimension2 : number, dimension3 : number) : number[][][] {\r\n    const a = new Array(dimension1);\r\n    for (let i = 0; i < dimension1; i++) {\r\n        a[ i ] = new Array(dimension2);\r\n        for (let j = 0; j < dimension2; j++) {\r\n            a[ i ][ j ] = new Array(dimension3);\r\n            for (let k = 0; k < dimension3; k++) {\r\n                a[ i ][ j ][ k ] = 0;\r\n            }\r\n        }\r\n    }\r\n    return a;\r\n}\r\n\r\nfunction fillArray3D<T>(a : T[][][], dimension1 : number, dimension2 : number, dimension3 : number, value : T) : void {\r\n    for (let i = 0; i < dimension1; i++) {\r\n        a[ i ] = [];\r\n        for (let j = 0; j < dimension2; j++) {\r\n            a[ i ][ j ] = [];\r\n            for (let k = 0; k < dimension3; k++) {\r\n                a[ i ][ j ][ k ] = value;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction fillArray1D<T>(a : T[], dimension1 : number, value : T) : void {\r\n    for (let i = 0; i < dimension1; i++) {\r\n        a[ i ] = value;\r\n    }\r\n}\r\n\r\nexport class WuColorCube {\r\n    redMinimum : number;\r\n    redMaximum : number;\r\n    greenMinimum : number;\r\n    greenMaximum : number;\r\n    blueMinimum : number;\r\n    blueMaximum : number;\r\n    volume : number;\r\n    alphaMinimum : number;\r\n    alphaMaximum : number;\r\n}\r\n\r\nexport class WuQuant {\r\n\r\n    private static readonly alpha = 3;\r\n    private static readonly red   = 2;\r\n    private static readonly green = 1;\r\n    private static readonly blue  = 0;\r\n\r\n    private _reds : number[];\r\n    private _greens : number[];\r\n    private _blues : number[];\r\n    private _alphas : number[];\r\n    private _sums : number[];\r\n\r\n    private _weights : number[][][][];\r\n    private _momentsRed : number[][][][];\r\n    private _momentsGreen : number[][][][];\r\n    private _momentsBlue : number[][][][];\r\n    private _momentsAlpha : number[][][][];\r\n    private _moments : number[][][][];\r\n\r\n    private _table : number[];\r\n    private _pixels : Point[];\r\n\r\n    private _cubes : WuColorCube[];\r\n    private _colors : number;\r\n\r\n    private _significantBitsPerChannel : number;\r\n    private _maxSideIndex : number;\r\n    private _alphaMaxSideIndex : number;\r\n    private _sideSize : number;\r\n    private _alphaSideSize : number;\r\n\r\n    private readonly _distance : AbstractDistanceCalculator;\r\n\r\n    constructor(colorDistanceCalculator : AbstractDistanceCalculator, colors : number = 256, significantBitsPerChannel : number = 5) {\r\n        this._distance = colorDistanceCalculator;\r\n        this._setQuality(significantBitsPerChannel);\r\n        this._initialize(colors);\r\n    }\r\n\r\n    sample(image : PointContainer) : void {\r\n        const pointArray = image.getPointArray();\r\n\r\n        for (let i = 0, l = pointArray.length; i < l; i++) {\r\n            this._addColor(pointArray[ i ]);\r\n        }\r\n\r\n        this._pixels = this._pixels.concat(pointArray);\r\n    }\r\n\r\n    quantize() : Palette {\r\n        this._preparePalette();\r\n\r\n        const palette : Palette = new Palette();\r\n\r\n        // generates palette\r\n        for (let paletteIndex = 0; paletteIndex < this._colors; paletteIndex++) {\r\n            if (this._sums[ paletteIndex ] > 0) {\r\n                const sum = this._sums[ paletteIndex ],\r\n                      r   = this._reds[ paletteIndex ] / sum,\r\n                      g   = this._greens[ paletteIndex ] / sum,\r\n                      b   = this._blues[ paletteIndex ] / sum,\r\n                      a   = this._alphas[ paletteIndex ] / sum;\r\n\r\n                const color = Point.createByRGBA(r | 0, g | 0, b | 0, a | 0);\r\n                palette.add(color);\r\n            }\r\n        }\r\n\r\n        palette.sort();\r\n        return palette;\r\n    }\r\n\r\n    private _preparePalette() : void {\r\n        // preprocess the colors\r\n        this._calculateMoments();\r\n\r\n        let next           = 0,\r\n            volumeVariance = createArray1D(this._colors);\r\n\r\n        // processes the cubes\r\n        for (let cubeIndex = 1; cubeIndex < this._colors; ++cubeIndex) {\r\n            // if cut is possible; make it\r\n            if (this._cut(this._cubes[ next ], this._cubes[ cubeIndex ])) {\r\n                volumeVariance[ next ]      = this._cubes[ next ].volume > 1 ? this._calculateVariance(this._cubes[ next ]) : 0.0;\r\n                volumeVariance[ cubeIndex ] = this._cubes[ cubeIndex ].volume > 1 ? this._calculateVariance(this._cubes[ cubeIndex ]) : 0.0;\r\n            } else {\r\n                // the cut was not possible, revert the index\r\n                volumeVariance[ next ] = 0.0;\r\n                cubeIndex--;\r\n            }\r\n\r\n            next     = 0;\r\n            let temp = volumeVariance[ 0 ];\r\n\r\n            for (let index = 1; index <= cubeIndex; ++index) {\r\n                if (volumeVariance[ index ] > temp) {\r\n                    temp = volumeVariance[ index ];\r\n                    next = index;\r\n                }\r\n            }\r\n\r\n            if (temp <= 0.0) {\r\n                this._colors = cubeIndex + 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        const lookupRed : number[]   = [],\r\n              lookupGreen : number[] = [],\r\n              lookupBlue : number[]  = [],\r\n              lookupAlpha : number[] = [];\r\n\r\n        // precalculates lookup tables\r\n        for (let k = 0; k < this._colors; ++k) {\r\n\r\n            const weight = WuQuant._volume(this._cubes[ k ], this._weights);\r\n\r\n            if (weight > 0) {\r\n                lookupRed[ k ]   = (WuQuant._volume(this._cubes[ k ], this._momentsRed) / weight) | 0;\r\n                lookupGreen[ k ] = (WuQuant._volume(this._cubes[ k ], this._momentsGreen) / weight) | 0;\r\n                lookupBlue[ k ]  = (WuQuant._volume(this._cubes[ k ], this._momentsBlue) / weight) | 0;\r\n                lookupAlpha[ k ] = (WuQuant._volume(this._cubes[ k ], this._momentsAlpha) / weight) | 0;\r\n            } else {\r\n                lookupRed[ k ]   = 0;\r\n                lookupGreen[ k ] = 0;\r\n                lookupBlue[ k ]  = 0;\r\n                lookupAlpha[ k ] = 0;\r\n            }\r\n        }\r\n\r\n        this._reds   = createArray1D(this._colors + 1);\r\n        this._greens = createArray1D(this._colors + 1);\r\n        this._blues  = createArray1D(this._colors + 1);\r\n        this._alphas = createArray1D(this._colors + 1);\r\n        this._sums   = createArray1D(this._colors + 1);\r\n\r\n        // scans and adds colors\r\n        for (let index = 0, l = this._pixels.length; index < l; index++) {\r\n            const color : Point = this._pixels[ index ];\r\n\r\n            const match = -1;\r\n\r\n            let bestMatch    = match,\r\n                bestDistance = Number.MAX_VALUE;\r\n\r\n            for (let lookup = 0; lookup < this._colors; lookup++) {\r\n                const foundRed   = lookupRed[ lookup ],\r\n                      foundGreen = lookupGreen[ lookup ],\r\n                      foundBlue  = lookupBlue[ lookup ],\r\n                      foundAlpha = lookupAlpha[ lookup ];\r\n\r\n                const distance = this._distance.calculateRaw(foundRed, foundGreen, foundBlue, foundAlpha, color.r, color.g, color.b, color.a);\r\n                //var distance = this._distance.calculateRaw(Utils.Point.createByRGBA(foundRed, foundGreen, foundBlue, foundAlpha), color);\r\n                //deltaRed   = color.r - foundRed,\r\n                //deltaGreen = color.g - foundGreen,\r\n                //deltaBlue  = color.b - foundBlue,\r\n                //deltaAlpha = color.a - foundAlpha,\r\n\r\n                //distance   = deltaRed * deltaRed + deltaGreen * deltaGreen + deltaBlue * deltaBlue + deltaAlpha * deltaAlpha;\r\n\r\n                if (distance < bestDistance) {\r\n                    bestDistance = distance;\r\n                    bestMatch    = lookup;\r\n                }\r\n            }\r\n\r\n            this._reds[ bestMatch ] += color.r;\r\n            this._greens[ bestMatch ] += color.g;\r\n            this._blues[ bestMatch ] += color.b;\r\n            this._alphas[ bestMatch ] += color.a;\r\n            this._sums[ bestMatch ]++;\r\n        }\r\n    }\r\n\r\n    private _addColor(color : Point) : void {\r\n        const bitsToRemove = 8 - this._significantBitsPerChannel,\r\n              indexRed     = (color.r >> bitsToRemove) + 1,\r\n              indexGreen   = (color.g >> bitsToRemove) + 1,\r\n              indexBlue    = (color.b >> bitsToRemove) + 1,\r\n              indexAlpha   = (color.a >> bitsToRemove) + 1;\r\n\r\n        //if(color.a > 10) {\r\n        this._weights[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ]++;\r\n        this._momentsRed[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.r;\r\n        this._momentsGreen[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.g;\r\n        this._momentsBlue[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.b;\r\n        this._momentsAlpha[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += color.a;\r\n        this._moments[ indexAlpha ][ indexRed ][ indexGreen ][ indexBlue ] += this._table[ color.r ] + this._table[ color.g ] + this._table[ color.b ] + this._table[ color.a ];\r\n//\t\t\t}\r\n    }\r\n\r\n    /**\r\n     * Converts the histogram to a series of _moments.\r\n     */\r\n    private _calculateMoments() : void {\r\n        const area : number[]      = [],\r\n              areaRed : number[]   = [],\r\n              areaGreen : number[] = [],\r\n              areaBlue : number[]  = [],\r\n              areaAlpha : number[] = [],\r\n              area2 : number[]     = [];\r\n\r\n        const xarea : number[][][]      = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n              xareaRed : number[][][]   = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n              xareaGreen : number[][][] = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n              xareaBlue : number[][][]  = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n              xareaAlpha : number[][][] = createArray3D(this._sideSize, this._sideSize, this._sideSize),\r\n              xarea2 : number[][][]     = createArray3D(this._sideSize, this._sideSize, this._sideSize);\r\n\r\n        for (let alphaIndex = 1; alphaIndex <= this._alphaMaxSideIndex; ++alphaIndex) {\r\n            fillArray3D<number>(xarea, this._sideSize, this._sideSize, this._sideSize, 0);\r\n            fillArray3D<number>(xareaRed, this._sideSize, this._sideSize, this._sideSize, 0);\r\n            fillArray3D<number>(xareaGreen, this._sideSize, this._sideSize, this._sideSize, 0);\r\n            fillArray3D<number>(xareaBlue, this._sideSize, this._sideSize, this._sideSize, 0);\r\n            fillArray3D<number>(xareaAlpha, this._sideSize, this._sideSize, this._sideSize, 0);\r\n            fillArray3D<number>(xarea2, this._sideSize, this._sideSize, this._sideSize, 0);\r\n\r\n            for (let redIndex = 1; redIndex <= this._maxSideIndex; ++redIndex) {\r\n                fillArray1D<number>(area, this._sideSize, 0);\r\n                fillArray1D<number>(areaRed, this._sideSize, 0);\r\n                fillArray1D<number>(areaGreen, this._sideSize, 0);\r\n                fillArray1D<number>(areaBlue, this._sideSize, 0);\r\n                fillArray1D<number>(areaAlpha, this._sideSize, 0);\r\n                fillArray1D<number>(area2, this._sideSize, 0);\r\n\r\n                for (let greenIndex = 1; greenIndex <= this._maxSideIndex; ++greenIndex) {\r\n                    let line      = 0,\r\n                        lineRed   = 0,\r\n                        lineGreen = 0,\r\n                        lineBlue  = 0,\r\n                        lineAlpha = 0,\r\n                        line2     = 0.0;\r\n\r\n                    for (let blueIndex = 1; blueIndex <= this._maxSideIndex; ++blueIndex) {\r\n                        line += this._weights[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n                        lineRed += this._momentsRed[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n                        lineGreen += this._momentsGreen[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n                        lineBlue += this._momentsBlue[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n                        lineAlpha += this._momentsAlpha[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n                        line2 += this._moments[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ];\r\n\r\n                        area[ blueIndex ] += line;\r\n                        areaRed[ blueIndex ] += lineRed;\r\n                        areaGreen[ blueIndex ] += lineGreen;\r\n                        areaBlue[ blueIndex ] += lineBlue;\r\n                        areaAlpha[ blueIndex ] += lineAlpha;\r\n                        area2[ blueIndex ] += line2;\r\n\r\n                        xarea[ redIndex ][ greenIndex ][ blueIndex ]      = xarea[ redIndex - 1 ][ greenIndex ][ blueIndex ] + area[ blueIndex ];\r\n                        xareaRed[ redIndex ][ greenIndex ][ blueIndex ]   = xareaRed[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaRed[ blueIndex ];\r\n                        xareaGreen[ redIndex ][ greenIndex ][ blueIndex ] = xareaGreen[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaGreen[ blueIndex ];\r\n                        xareaBlue[ redIndex ][ greenIndex ][ blueIndex ]  = xareaBlue[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaBlue[ blueIndex ];\r\n                        xareaAlpha[ redIndex ][ greenIndex ][ blueIndex ] = xareaAlpha[ redIndex - 1 ][ greenIndex ][ blueIndex ] + areaAlpha[ blueIndex ];\r\n                        xarea2[ redIndex ][ greenIndex ][ blueIndex ]     = xarea2[ redIndex - 1 ][ greenIndex ][ blueIndex ] + area2[ blueIndex ];\r\n\r\n                        this._weights[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ]      = this._weights[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xarea[ redIndex ][ greenIndex ][ blueIndex ];\r\n                        this._momentsRed[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ]   = this._momentsRed[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaRed[ redIndex ][ greenIndex ][ blueIndex ];\r\n                        this._momentsGreen[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._momentsGreen[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaGreen[ redIndex ][ greenIndex ][ blueIndex ];\r\n                        this._momentsBlue[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ]  = this._momentsBlue[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaBlue[ redIndex ][ greenIndex ][ blueIndex ];\r\n                        this._momentsAlpha[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ] = this._momentsAlpha[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xareaAlpha[ redIndex ][ greenIndex ][ blueIndex ];\r\n                        this._moments[ alphaIndex ][ redIndex ][ greenIndex ][ blueIndex ]      = this._moments[ alphaIndex - 1 ][ redIndex ][ greenIndex ][ blueIndex ] + xarea2[ redIndex ][ greenIndex ][ blueIndex ];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Computes the volume of the cube in a specific moment.\r\n     */\r\n    private static _volumeFloat(cube : WuColorCube, moment : number[][][][]) : number {\r\n        return (moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n            moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n            moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n            moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n            moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n            moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n            moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n            moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n\r\n            (moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n            moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n            moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n            moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n            moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n            moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n            moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n            moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n    }\r\n\r\n    /**\r\n     * Computes the volume of the cube in a specific moment.\r\n     */\r\n    private static _volume(cube : WuColorCube, moment : number[][][][]) : number {\r\n        return WuQuant._volumeFloat(cube, moment) | 0;\r\n    }\r\n\r\n    /**\r\n     * Splits the cube in given position][and color direction.\r\n     */\r\n    private static _top(cube : WuColorCube, direction : number, position : number, moment : number[][][][]) : number {\r\n        let result : number;\r\n        switch (direction) {\r\n            case WuQuant.alpha:\r\n                result = (moment[ position ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n                    moment[ position ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n                    moment[ position ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n                    moment[ position ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n                    (moment[ position ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n                    moment[ position ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n                    moment[ position ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n                    moment[ position ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n                break;\r\n\r\n            case WuQuant.red:\r\n                result = (moment[ cube.alphaMaximum ][ position ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n                    moment[ cube.alphaMaximum ][ position ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n                    moment[ cube.alphaMinimum ][ position ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n                    moment[ cube.alphaMinimum ][ position ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n                    (moment[ cube.alphaMaximum ][ position ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMaximum ][ position ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMinimum ][ position ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMinimum ][ position ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n                break;\r\n\r\n            case WuQuant.green:\r\n                result = (moment[ cube.alphaMaximum ][ cube.redMaximum ][ position ][ cube.blueMaximum ] -\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ position ][ cube.blueMaximum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMaximum ][ position ][ cube.blueMaximum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ position ][ cube.blueMaximum ]) -\r\n                    (moment[ cube.alphaMaximum ][ cube.redMaximum ][ position ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ position ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMaximum ][ position ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ position ][ cube.blueMinimum ]);\r\n                break;\r\n\r\n            case WuQuant.blue:\r\n                result = (moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ position ] -\r\n                    moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ position ] -\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ position ] +\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ position ]) -\r\n                    (moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ position ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ position ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ position ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ position ]);\r\n                break;\r\n            default:\r\n                throw new Error(\"impossible\")\r\n        }\r\n\r\n        return result | 0;\r\n    }\r\n\r\n    /**\r\n     * Splits the cube in a given color direction at its minimum.\r\n     */\r\n    private static _bottom(cube : WuColorCube, direction : number, moment : number[][][][]) : number {\r\n        switch (direction) {\r\n            case WuQuant.alpha:\r\n                return (-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n                    (-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\r\n            case WuQuant.red:\r\n                return (-moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] +\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMaximum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n                    (-moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\r\n            case WuQuant.green:\r\n                return (-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMaximum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMaximum ]) -\r\n                    (-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\r\n            case WuQuant.blue:\r\n                return (-moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMaximum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMaximum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]) -\r\n                    (-moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMaximum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMaximum ][ cube.greenMinimum ][ cube.blueMinimum ] +\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMaximum ][ cube.blueMinimum ] -\r\n                    moment[ cube.alphaMinimum ][ cube.redMinimum ][ cube.greenMinimum ][ cube.blueMinimum ]);\r\n\r\n            default:\r\n                // TODO: why here is return 0, and in this._top there is no default at all (now it is throw error)?\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates statistical variance for a given cube.\r\n     */\r\n    private  _calculateVariance(cube : WuColorCube) : number {\r\n        const volumeRed    = WuQuant._volume(cube, this._momentsRed),\r\n              volumeGreen  = WuQuant._volume(cube, this._momentsGreen),\r\n              volumeBlue   = WuQuant._volume(cube, this._momentsBlue),\r\n              volumeAlpha  = WuQuant._volume(cube, this._momentsAlpha),\r\n              volumeMoment = WuQuant._volumeFloat(cube, this._moments),\r\n              volumeWeight = WuQuant._volume(cube, this._weights),\r\n              distance     = volumeRed * volumeRed + volumeGreen * volumeGreen + volumeBlue * volumeBlue + volumeAlpha * volumeAlpha;\r\n\r\n        return volumeMoment - (distance / volumeWeight);\r\n    }\r\n\r\n    /**\r\n     * Finds the optimal (maximal) position for the cut.\r\n     */\r\n    private _maximize(cube : WuColorCube, direction : number, first : number, last : number, wholeRed : number, wholeGreen : number, wholeBlue : number, wholeAlpha : number, wholeWeight : number) : {max : number; position : number} {\r\n        const bottomRed    = WuQuant._bottom(cube, direction, this._momentsRed) | 0,\r\n              bottomGreen  = WuQuant._bottom(cube, direction, this._momentsGreen) | 0,\r\n              bottomBlue   = WuQuant._bottom(cube, direction, this._momentsBlue) | 0,\r\n              bottomAlpha  = WuQuant._bottom(cube, direction, this._momentsAlpha) | 0,\r\n              bottomWeight = WuQuant._bottom(cube, direction, this._weights) | 0;\r\n\r\n        let result      = 0.0,\r\n            cutPosition = -1;\r\n\r\n        for (let position = first; position < last; ++position) {\r\n            // determines the cube cut at a certain position\r\n            let halfRed    = bottomRed + WuQuant._top(cube, direction, position, this._momentsRed),\r\n                halfGreen  = bottomGreen + WuQuant._top(cube, direction, position, this._momentsGreen),\r\n                halfBlue   = bottomBlue + WuQuant._top(cube, direction, position, this._momentsBlue),\r\n                halfAlpha  = bottomAlpha + WuQuant._top(cube, direction, position, this._momentsAlpha),\r\n                halfWeight = bottomWeight + WuQuant._top(cube, direction, position, this._weights);\r\n\r\n            // the cube cannot be cut at bottom (this would lead to empty cube)\r\n            if (halfWeight != 0) {\r\n                let halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha,\r\n                    temp         = halfDistance / halfWeight;\r\n\r\n                halfRed    = wholeRed - halfRed;\r\n                halfGreen  = wholeGreen - halfGreen;\r\n                halfBlue   = wholeBlue - halfBlue;\r\n                halfAlpha  = wholeAlpha - halfAlpha;\r\n                halfWeight = wholeWeight - halfWeight;\r\n\r\n                if (halfWeight != 0) {\r\n                    halfDistance = halfRed * halfRed + halfGreen * halfGreen + halfBlue * halfBlue + halfAlpha * halfAlpha;\r\n                    temp += halfDistance / halfWeight;\r\n\r\n                    if (temp > result) {\r\n                        result      = temp;\r\n                        cutPosition = position;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return { max : result, position : cutPosition };\r\n    }\r\n\r\n    // Cuts a cube with another one.\r\n    private _cut(first : WuColorCube, second : WuColorCube) : boolean {\r\n        let direction : number;\r\n\r\n        const wholeRed    = WuQuant._volume(first, this._momentsRed),\r\n              wholeGreen  = WuQuant._volume(first, this._momentsGreen),\r\n              wholeBlue   = WuQuant._volume(first, this._momentsBlue),\r\n              wholeAlpha  = WuQuant._volume(first, this._momentsAlpha),\r\n              wholeWeight = WuQuant._volume(first, this._weights),\r\n\r\n              red         = this._maximize(first, WuQuant.red, first.redMinimum + 1, first.redMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight),\r\n              green       = this._maximize(first, WuQuant.green, first.greenMinimum + 1, first.greenMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight),\r\n              blue        = this._maximize(first, WuQuant.blue, first.blueMinimum + 1, first.blueMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight),\r\n              alpha       = this._maximize(first, WuQuant.alpha, first.alphaMinimum + 1, first.alphaMaximum, wholeRed, wholeGreen, wholeBlue, wholeAlpha, wholeWeight);\r\n\r\n        if (alpha.max >= red.max && alpha.max >= green.max && alpha.max >= blue.max) {\r\n            direction = WuQuant.alpha;\r\n\r\n            // cannot split empty cube\r\n            if (alpha.position < 0) return false;\r\n        } else {\r\n            if (red.max >= alpha.max && red.max >= green.max && red.max >= blue.max) {\r\n                direction = WuQuant.red;\r\n            } else if (green.max >= alpha.max && green.max >= red.max && green.max >= blue.max) {\r\n                direction = WuQuant.green;\r\n            } else {\r\n                direction = WuQuant.blue;\r\n            }\r\n        }\r\n\r\n        second.redMaximum   = first.redMaximum;\r\n        second.greenMaximum = first.greenMaximum;\r\n        second.blueMaximum  = first.blueMaximum;\r\n        second.alphaMaximum = first.alphaMaximum;\r\n\r\n        // cuts in a certain direction\r\n        switch (direction) {\r\n            case WuQuant.red:\r\n                second.redMinimum = first.redMaximum = red.position;\r\n                second.greenMinimum = first.greenMinimum;\r\n                second.blueMinimum  = first.blueMinimum;\r\n                second.alphaMinimum = first.alphaMinimum;\r\n                break;\r\n\r\n            case WuQuant.green:\r\n                second.greenMinimum = first.greenMaximum = green.position;\r\n                second.redMinimum   = first.redMinimum;\r\n                second.blueMinimum  = first.blueMinimum;\r\n                second.alphaMinimum = first.alphaMinimum;\r\n                break;\r\n\r\n            case WuQuant.blue:\r\n                second.blueMinimum = first.blueMaximum = blue.position;\r\n                second.redMinimum   = first.redMinimum;\r\n                second.greenMinimum = first.greenMinimum;\r\n                second.alphaMinimum = first.alphaMinimum;\r\n                break;\r\n\r\n            case WuQuant.alpha:\r\n                second.alphaMinimum = first.alphaMaximum = alpha.position;\r\n                second.blueMinimum  = first.blueMinimum;\r\n                second.redMinimum   = first.redMinimum;\r\n                second.greenMinimum = first.greenMinimum;\r\n                break;\r\n        }\r\n\r\n        // determines the volumes after cut\r\n        first.volume  = (first.redMaximum - first.redMinimum) * (first.greenMaximum - first.greenMinimum) * (first.blueMaximum - first.blueMinimum) * (first.alphaMaximum - first.alphaMinimum);\r\n        second.volume = (second.redMaximum - second.redMinimum) * (second.greenMaximum - second.greenMinimum) * (second.blueMaximum - second.blueMinimum) * (second.alphaMaximum - second.alphaMinimum);\r\n\r\n        // the cut was successful\r\n        return true;\r\n    }\r\n\r\n    private _initialize(colors : number) : void {\r\n        this._colors = colors;\r\n\r\n        // creates all the _cubes\r\n        this._cubes = [];\r\n\r\n        // initializes all the _cubes\r\n        for (let cubeIndex = 0; cubeIndex < colors; cubeIndex++) {\r\n            this._cubes[ cubeIndex ] = new WuColorCube();\r\n        }\r\n\r\n        // resets the reference minimums\r\n        this._cubes[ 0 ].redMinimum   = 0;\r\n        this._cubes[ 0 ].greenMinimum = 0;\r\n        this._cubes[ 0 ].blueMinimum  = 0;\r\n        this._cubes[ 0 ].alphaMinimum = 0;\r\n\r\n        // resets the reference maximums\r\n        this._cubes[ 0 ].redMaximum   = this._maxSideIndex;\r\n        this._cubes[ 0 ].greenMaximum = this._maxSideIndex;\r\n        this._cubes[ 0 ].blueMaximum  = this._maxSideIndex;\r\n        this._cubes[ 0 ].alphaMaximum = this._alphaMaxSideIndex;\r\n\r\n        this._weights      = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n        this._momentsRed   = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n        this._momentsGreen = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n        this._momentsBlue  = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n        this._momentsAlpha = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n        this._moments      = createArray4D(this._alphaSideSize, this._sideSize, this._sideSize, this._sideSize);\r\n\r\n        this._table = [];\r\n        for (let tableIndex = 0; tableIndex < 256; ++tableIndex) {\r\n            this._table[ tableIndex ] = tableIndex * tableIndex;\r\n        }\r\n\r\n        this._pixels = [];\r\n    }\r\n\r\n    private _setQuality(significantBitsPerChannel : number = 5) : void {\r\n        this._significantBitsPerChannel = significantBitsPerChannel;\r\n        this._maxSideIndex              = 1 << this._significantBitsPerChannel;\r\n        this._alphaMaxSideIndex         = this._maxSideIndex;\r\n\r\n        this._sideSize      = this._maxSideIndex + 1;\r\n        this._alphaSideSize = this._alphaMaxSideIndex + 1;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/palette/wu/wuQuant.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/palette/wu/wuQuant.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport { IImageDitherer } from \"./common\"\r\nimport { NearestColor } from \"./nearestColor\"\r\nimport { ErrorDiffusionArray, ErrorDiffusionArrayKernel } from \"./array\"\r\nimport { ErrorDiffusionRiemersma } from \"./riemersma\"\r\n\r\nexport {\r\n    IImageDitherer,\r\n    NearestColor,\r\n    ErrorDiffusionArray,\r\n    ErrorDiffusionArrayKernel,\r\n    ErrorDiffusionRiemersma\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/index.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/image/index.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * nearestColor.ts - part of Image Quantization Library\r\n */\r\nimport { IImageDitherer } from \"./common\"\r\nimport { AbstractDistanceCalculator } from \"../distance/abstractDistanceCalculator\"\r\nimport { PointContainer } from \"../utils/pointContainer\"\r\nimport { Palette } from \"../utils/palette\"\r\n\r\nexport class NearestColor implements IImageDitherer {\r\n    private _distance : AbstractDistanceCalculator;\r\n\r\n    constructor(colorDistanceCalculator : AbstractDistanceCalculator) {\r\n        this._distance = colorDistanceCalculator;\r\n    }\r\n\r\n    quantize(pointBuffer : PointContainer, palette : Palette) : PointContainer {\r\n        const pointArray = pointBuffer.getPointArray(),\r\n              width      = pointBuffer.getWidth(),\r\n              height     = pointBuffer.getHeight();\r\n\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0, idx = y * width; x < width; x++, idx++) {\r\n                // Image pixel\r\n                const point = pointArray[ idx ];\r\n                // Reduced pixel\r\n                point.from(palette.getNearestColor(this._distance, point));\r\n            }\r\n        }\r\n        return pointBuffer;\r\n    }\r\n}\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/nearestColor.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/image/nearestColor.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * ditherErrorDiffusionArray.ts - part of Image Quantization Library\r\n */\r\nimport { IImageDitherer } from \"./common\"\r\nimport { AbstractDistanceCalculator } from \"../distance/abstractDistanceCalculator\"\r\nimport { PointContainer } from \"../utils/pointContainer\"\r\nimport { Palette } from \"../utils/palette\"\r\nimport { Point } from \"../utils/point\"\r\nimport { inRange0to255Rounded } from \"../utils/arithmetic\"\r\n\r\n// TODO: is it the best name for this enum \"kernel\"?\r\nexport enum ErrorDiffusionArrayKernel {\r\n    FloydSteinberg = 0,\r\n    FalseFloydSteinberg,\r\n    Stucki,\r\n    Atkinson,\r\n    Jarvis,\r\n    Burkes,\r\n    Sierra,\r\n    TwoSierra,\r\n    SierraLite\r\n}\r\n\r\n// http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/\r\nexport class ErrorDiffusionArray implements IImageDitherer {\r\n    private _minColorDistance : number;\r\n    private _serpentine : boolean;\r\n    private _kernel : number[][];\r\n    /** true = GIMP, false = XNVIEW */\r\n            private _calculateErrorLikeGIMP : boolean;\r\n\r\n    private _distance : AbstractDistanceCalculator;\r\n\r\n    constructor(colorDistanceCalculator : AbstractDistanceCalculator, kernel : ErrorDiffusionArrayKernel, serpentine : boolean = true, minimumColorDistanceToDither : number = 0, calculateErrorLikeGIMP : boolean = false) {\r\n        this._setKernel(kernel);\r\n\r\n        this._distance               = colorDistanceCalculator;\r\n        this._minColorDistance       = minimumColorDistanceToDither;\r\n        this._serpentine             = serpentine;\r\n        this._calculateErrorLikeGIMP = calculateErrorLikeGIMP;\r\n    }\r\n\r\n    // adapted from http://jsbin.com/iXofIji/2/edit by PAEz\r\n    // fixed version. it doesn't use image pixels as error storage, also it doesn't have 0.3 + 0.3 + 0.3 + 0.3 = 0 error\r\n    quantize(pointBuffer : PointContainer, palette : Palette) : PointContainer {\r\n        const pointArray                = pointBuffer.getPointArray(),\r\n              originalPoint             = new Point(),\r\n              width                     = pointBuffer.getWidth(),\r\n              height                    = pointBuffer.getHeight(),\r\n              errorLines : number[][][] = [];\r\n\r\n        let dir           = 1,\r\n            maxErrorLines = 1;\r\n\r\n        // initial error lines (number is taken from dithering kernel)\r\n        for (let i = 0; i < this._kernel.length; i++) {\r\n            const kernelErrorLines = this._kernel[ i ][ 2 ] + 1;\r\n            if (maxErrorLines < kernelErrorLines) maxErrorLines = kernelErrorLines;\r\n        }\r\n        for (let i = 0; i < maxErrorLines; i++) {\r\n            this._fillErrorLine(errorLines[ i ] = [], width);\r\n        }\r\n\r\n        for (let y = 0; y < height; y++) {\r\n            // always serpentine\r\n            if (this._serpentine) dir = dir * -1;\r\n\r\n            const lni    = y * width,\r\n                  xStart = dir == 1 ? 0 : width - 1,\r\n                  xEnd   = dir == 1 ? width : -1;\r\n\r\n            // cyclic shift with erasing\r\n            this._fillErrorLine(errorLines[ 0 ], width);\r\n            // TODO: why it is needed to cast types here?\r\n            errorLines.push(<number[][]>errorLines.shift());\r\n\r\n            const errorLine = errorLines[ 0 ];\r\n            for (let x = xStart, idx = lni + xStart; x !== xEnd; x += dir, idx += dir) {\r\n                // Image pixel\r\n                const point = pointArray[ idx ],\r\n                      //originalPoint = new Utils.Point(),\r\n                      error = errorLine[ x ];\r\n\r\n                originalPoint.from(point);\r\n\r\n                const correctedPoint = Point.createByRGBA(\r\n                    inRange0to255Rounded(point.r + error[ 0 ]),\r\n                    inRange0to255Rounded(point.g + error[ 1 ]),\r\n                    inRange0to255Rounded(point.b + error[ 2 ]),\r\n                    inRange0to255Rounded(point.a + error[ 3 ])\r\n                );\r\n\r\n                // Reduced pixel\r\n                const palettePoint = palette.getNearestColor(this._distance, correctedPoint);\r\n                point.from(palettePoint);\r\n\r\n                // dithering strength\r\n                if (this._minColorDistance) {\r\n                    const dist = this._distance.calculateNormalized(point, palettePoint);\r\n                    if (dist < this._minColorDistance) continue;\r\n                }\r\n\r\n                // Component distance\r\n                let er : number, eg : number, eb : number, ea : number;\r\n                if (this._calculateErrorLikeGIMP) {\r\n                    er = correctedPoint.r - palettePoint.r;\r\n                    eg = correctedPoint.g - palettePoint.g;\r\n                    eb = correctedPoint.b - palettePoint.b;\r\n                    ea = correctedPoint.a - palettePoint.a;\r\n                } else {\r\n                    er = originalPoint.r - palettePoint.r;\r\n                    eg = originalPoint.g - palettePoint.g;\r\n                    eb = originalPoint.b - palettePoint.b;\r\n                    ea = originalPoint.a - palettePoint.a;\r\n                }\r\n\r\n                const dStart = dir == 1 ? 0 : this._kernel.length - 1,\r\n                      dEnd   = dir == 1 ? this._kernel.length : -1;\r\n\r\n                for (let i = dStart; i !== dEnd; i += dir) {\r\n                    const x1 = this._kernel[ i ][ 1 ] * dir,\r\n                          y1 = this._kernel[ i ][ 2 ];\r\n\r\n                    if (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) {\r\n                        const d = this._kernel[ i ][ 0 ],\r\n                              e = errorLines[ y1 ][ x1 + x ];\r\n\r\n                        e[ 0 ] = e[ 0 ] + er * d;\r\n                        e[ 1 ] = e[ 1 ] + eg * d;\r\n                        e[ 2 ] = e[ 2 ] + eb * d;\r\n                        e[ 3 ] = e[ 3 ] + ea * d;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return pointBuffer;\r\n    }\r\n\r\n    private _fillErrorLine(errorLine : number[][], width : number) : void {\r\n        // shrink\r\n        if (errorLine.length > width) {\r\n            errorLine.length = width;\r\n        }\r\n\r\n        // reuse existing arrays\r\n        const l = errorLine.length;\r\n        for (let i = 0; i < l; i++) {\r\n            const error = errorLine[ i ];\r\n            error[ 0 ]  = error[ 1 ] = error[ 2 ] = error[ 3 ] = 0;\r\n        }\r\n\r\n        // create missing arrays\r\n        for (let i = l; i < width; i++) {\r\n            errorLine[ i ] = [ 0.0, 0.0, 0.0, 0.0 ];\r\n        }\r\n    }\r\n\r\n    private _setKernel(kernel : ErrorDiffusionArrayKernel) {\r\n        switch (kernel) {\r\n            case ErrorDiffusionArrayKernel.FloydSteinberg:\r\n                this._kernel = [\r\n                    [ 7 / 16, 1, 0 ],\r\n                    [ 3 / 16, -1, 1 ],\r\n                    [ 5 / 16, 0, 1 ],\r\n                    [ 1 / 16, 1, 1 ]\r\n                ];\r\n                break;\r\n\r\n            case ErrorDiffusionArrayKernel.FalseFloydSteinberg:\r\n                this._kernel = [\r\n                    [ 3 / 8, 1, 0 ],\r\n                    [ 3 / 8, 0, 1 ],\r\n                    [ 2 / 8, 1, 1 ]\r\n                ];\r\n                break;\r\n\r\n            case ErrorDiffusionArrayKernel.Stucki:\r\n                this._kernel = [\r\n                    [ 8 / 42, 1, 0 ],\r\n                    [ 4 / 42, 2, 0 ],\r\n                    [ 2 / 42, -2, 1 ],\r\n                    [ 4 / 42, -1, 1 ],\r\n                    [ 8 / 42, 0, 1 ],\r\n                    [ 4 / 42, 1, 1 ],\r\n                    [ 2 / 42, 2, 1 ],\r\n                    [ 1 / 42, -2, 2 ],\r\n                    [ 2 / 42, -1, 2 ],\r\n                    [ 4 / 42, 0, 2 ],\r\n                    [ 2 / 42, 1, 2 ],\r\n                    [ 1 / 42, 2, 2 ]\r\n                ];\r\n                break;\r\n\r\n            case ErrorDiffusionArrayKernel.Atkinson:\r\n                this._kernel = [\r\n                    [ 1 / 8, 1, 0 ],\r\n                    [ 1 / 8, 2, 0 ],\r\n                    [ 1 / 8, -1, 1 ],\r\n                    [ 1 / 8, 0, 1 ],\r\n                    [ 1 / 8, 1, 1 ],\r\n                    [ 1 / 8, 0, 2 ]\r\n                ];\r\n                break;\r\n\r\n            case ErrorDiffusionArrayKernel.Jarvis:\r\n                this._kernel = [\t\t\t// Jarvis, Judice, and Ninke / JJN?\r\n                    [ 7 / 48, 1, 0 ],\r\n                    [ 5 / 48, 2, 0 ],\r\n                    [ 3 / 48, -2, 1 ],\r\n                    [ 5 / 48, -1, 1 ],\r\n                    [ 7 / 48, 0, 1 ],\r\n                    [ 5 / 48, 1, 1 ],\r\n                    [ 3 / 48, 2, 1 ],\r\n                    [ 1 / 48, -2, 2 ],\r\n                    [ 3 / 48, -1, 2 ],\r\n                    [ 5 / 48, 0, 2 ],\r\n                    [ 3 / 48, 1, 2 ],\r\n                    [ 1 / 48, 2, 2 ]\r\n                ];\r\n                break;\r\n\r\n            case ErrorDiffusionArrayKernel.Burkes:\r\n                this._kernel = [\r\n                    [ 8 / 32, 1, 0 ],\r\n                    [ 4 / 32, 2, 0 ],\r\n                    [ 2 / 32, -2, 1 ],\r\n                    [ 4 / 32, -1, 1 ],\r\n                    [ 8 / 32, 0, 1 ],\r\n                    [ 4 / 32, 1, 1 ],\r\n                    [ 2 / 32, 2, 1 ],\r\n                ];\r\n                break;\r\n\r\n            case ErrorDiffusionArrayKernel.Sierra:\r\n                this._kernel = [\r\n                    [ 5 / 32, 1, 0 ],\r\n                    [ 3 / 32, 2, 0 ],\r\n                    [ 2 / 32, -2, 1 ],\r\n                    [ 4 / 32, -1, 1 ],\r\n                    [ 5 / 32, 0, 1 ],\r\n                    [ 4 / 32, 1, 1 ],\r\n                    [ 2 / 32, 2, 1 ],\r\n                    [ 2 / 32, -1, 2 ],\r\n                    [ 3 / 32, 0, 2 ],\r\n                    [ 2 / 32, 1, 2 ]\r\n                ];\r\n                break;\r\n\r\n            case ErrorDiffusionArrayKernel.TwoSierra:\r\n                this._kernel = [\r\n                    [ 4 / 16, 1, 0 ],\r\n                    [ 3 / 16, 2, 0 ],\r\n                    [ 1 / 16, -2, 1 ],\r\n                    [ 2 / 16, -1, 1 ],\r\n                    [ 3 / 16, 0, 1 ],\r\n                    [ 2 / 16, 1, 1 ],\r\n                    [ 1 / 16, 2, 1 ]\r\n                ];\r\n                break;\r\n\r\n            case ErrorDiffusionArrayKernel.SierraLite:\r\n                this._kernel = [\r\n                    [ 2 / 4, 1, 0 ],\r\n                    [ 1 / 4, -1, 1 ],\r\n                    [ 1 / 4, 0, 1 ]\r\n                ];\r\n                break;\r\n\r\n            default:\r\n                throw new Error(\"ErrorDiffusionArray: unknown kernel = \" + kernel);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/array.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/image/array.ts","/**\r\n * @preserve\r\n * MIT License\r\n *\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to\r\n * deal in the Software without restriction, including without limitation the\r\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\r\n * sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\r\n * IN THE SOFTWARE.\r\n *\r\n * nearestColor.ts - part of Image Quantization Library\r\n */\r\nimport { IImageDitherer } from \"./common\"\r\nimport { HilbertCurveBase } from \"./spaceFillingCurves/hilbertCurve\"\r\nimport { AbstractDistanceCalculator } from \"../distance/abstractDistanceCalculator\"\r\nimport { PointContainer } from \"../utils/pointContainer\"\r\nimport { Palette } from \"../utils/palette\"\r\nimport { Point } from \"../utils/point\"\r\nimport { inRange0to255Rounded } from \"../utils/arithmetic\"\r\n\r\nexport class ErrorDiffusionRiemersma implements IImageDitherer {\r\n    private _distance : AbstractDistanceCalculator;\r\n    private _weights : number[];\r\n    private _errorQueueSize : number;\r\n    private _errorPropagation : number;\r\n    private _max : number;\r\n\r\n    constructor(colorDistanceCalculator : AbstractDistanceCalculator, errorQueueSize : number = 16, errorPropagation : number = 1) {\r\n        this._distance         = colorDistanceCalculator;\r\n        this._errorPropagation = errorPropagation;\r\n        this._errorQueueSize   = errorQueueSize;\r\n        this._max              = this._errorQueueSize;\r\n        this._createWeights();\r\n    }\r\n\r\n    quantize(pointBuffer : PointContainer, palette : Palette) : PointContainer {\r\n        const curve                                                           = new HilbertCurveBase(),\r\n              pointArray                                                      = pointBuffer.getPointArray(),\r\n              width                                                           = pointBuffer.getWidth(),\r\n              height                                                          = pointBuffer.getHeight(),\r\n              errorQueue : {r : number; g : number; b : number; a : number}[] = [];\r\n\r\n        let head = 0;\r\n\r\n        for (let i = 0; i < this._errorQueueSize; i++) {\r\n            errorQueue[ i ] = { r : 0, g : 0, b : 0, a : 0 };\r\n        }\r\n\r\n        curve.walk(width, height, (x, y) => {\r\n            const p = pointArray[ x + y * width ];\r\n            let r   = p.r, g = p.g, b = p.b, a = p.a;\r\n            for (let i = 0; i < this._errorQueueSize; i++) {\r\n                const weight = this._weights[ i ],\r\n                      e      = errorQueue[ (i + head) % this._errorQueueSize ];\r\n\r\n                r += e.r * weight;\r\n                g += e.g * weight;\r\n                b += e.b * weight;\r\n                a += e.a * weight;\r\n            }\r\n\r\n            const correctedPoint = Point.createByRGBA(\r\n                inRange0to255Rounded(r),\r\n                inRange0to255Rounded(g),\r\n                inRange0to255Rounded(b),\r\n                inRange0to255Rounded(a)\r\n            );\r\n\r\n            const quantizedPoint = palette.getNearestColor(this._distance, correctedPoint);\r\n\r\n            // update head and calculate tail\r\n            head       = (head + 1) % this._errorQueueSize;\r\n            const tail = (head + this._errorQueueSize - 1) % this._errorQueueSize;\r\n\r\n            // update error with new value\r\n            errorQueue[ tail ].r = p.r - quantizedPoint.r;\r\n            errorQueue[ tail ].g = p.g - quantizedPoint.g;\r\n            errorQueue[ tail ].b = p.b - quantizedPoint.b;\r\n            errorQueue[ tail ].a = p.a - quantizedPoint.a;\r\n\r\n            // update point\r\n            p.from(quantizedPoint);\r\n        });\r\n\r\n        return pointBuffer;\r\n    }\r\n\r\n    private _createWeights() : void {\r\n        this._weights = [];\r\n\r\n        const multiplier = Math.exp(Math.log(this._max) / (this._errorQueueSize - 1));\r\n        for (let i = 0, next = 1; i < this._errorQueueSize; i++) {\r\n            this._weights[ i ] = (((next + 0.5) | 0) / this._max) * this._errorPropagation;\r\n            next *= multiplier;\r\n        }\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/riemersma.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/image/riemersma.ts","enum Direction {\r\n    NONE = 0,\r\n    UP,\r\n    LEFT,\r\n    RIGHT,\r\n    DOWN,\r\n}\r\n\r\n// Check code against double-entrance into walk (walk=> callback => walk)\r\nexport class HilbertCurveBase {\r\n    private _x : number;\r\n    private _y : number;\r\n    private _d : number;\r\n    private _width : number;\r\n    private _height : number;\r\n    private _callback : (x : number, y : number, d : number) => void;\r\n    private _level : number;\r\n\r\n    walk(width : number, height : number, visitorCallback : (x : number, y : number, d : number) => void) : void {\r\n        this._x        = 0;\r\n        this._y        = 0;\r\n        this._d        = 0;\r\n        this._width    = width;\r\n        this._height   = height;\r\n        this._callback = visitorCallback;\r\n\r\n        const maxBound = Math.max(width, height);\r\n\r\n        this._level = (Math.log(maxBound) / Math.log(2) + 1) | 0;\r\n        this._walkHilbert(Direction.UP);\r\n        this._visit(Direction.NONE);\r\n    }\r\n\r\n    private _walkHilbert(direction : Direction) {\r\n        if (this._level < 1) return;\r\n\r\n        this._level--;\r\n        switch (direction) {\r\n            case Direction.LEFT:\r\n                this._walkHilbert(Direction.UP);\r\n                this._visit(Direction.RIGHT);\r\n                this._walkHilbert(Direction.LEFT);\r\n                this._visit(Direction.DOWN);\r\n                this._walkHilbert(Direction.LEFT);\r\n                this._visit(Direction.LEFT);\r\n                this._walkHilbert(Direction.DOWN);\r\n                break;\r\n\r\n            case Direction.RIGHT:\r\n                this._walkHilbert(Direction.DOWN);\r\n                this._visit(Direction.LEFT);\r\n                this._walkHilbert(Direction.RIGHT);\r\n                this._visit(Direction.UP);\r\n                this._walkHilbert(Direction.RIGHT);\r\n                this._visit(Direction.RIGHT);\r\n                this._walkHilbert(Direction.UP);\r\n                break;\r\n\r\n            case Direction.UP:\r\n                this._walkHilbert(Direction.LEFT);\r\n                this._visit(Direction.DOWN);\r\n                this._walkHilbert(Direction.UP);\r\n                this._visit(Direction.RIGHT);\r\n                this._walkHilbert(Direction.UP);\r\n                this._visit(Direction.UP);\r\n                this._walkHilbert(Direction.RIGHT);\r\n                break;\r\n\r\n            case Direction.DOWN:\r\n                this._walkHilbert(Direction.RIGHT);\r\n                this._visit(Direction.UP);\r\n                this._walkHilbert(Direction.DOWN);\r\n                this._visit(Direction.LEFT);\r\n                this._walkHilbert(Direction.DOWN);\r\n                this._visit(Direction.DOWN);\r\n                this._walkHilbert(Direction.LEFT);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this._level++;\r\n    }\r\n\r\n    private _visit(direction : Direction) : void {\r\n        if (this._x >= 0 && this._x < this._width && this._y >= 0 && this._y < this._height) {\r\n            this._callback(this._x, this._y, this._d);\r\n            this._d++;\r\n        }\r\n        switch (direction) {\r\n            case Direction.LEFT:\r\n                this._x--;\r\n                break;\r\n            case Direction.RIGHT:\r\n                this._x++;\r\n                break;\r\n            case Direction.UP:\r\n                this._y--;\r\n                break;\r\n            case Direction.DOWN:\r\n                this._y++;\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/image/spaceFillingCurves/hilbertCurve.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/image/spaceFillingCurves/hilbertCurve.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport { SSIM } from \"./ssim\"\r\n\r\nexport {\r\n    SSIM\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/quality/index.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/quality/index.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * ssim.ts - part of Image Quantization Library\r\n */\r\nimport { PointContainer } from \"../utils/pointContainer\"\r\nimport { Y } from \"../constants/bt709\"\r\n\r\n// based on https://github.com/rhys-e/structural-similarity\r\n// http://en.wikipedia.org/wiki/Structural_similarity\r\nconst K1 = 0.01,\r\n      K2 = 0.03;\r\n\r\nexport class SSIM {\r\n    compare(image1 : PointContainer, image2 : PointContainer) {\r\n        if (image1.getHeight() !== image2.getHeight() || image1.getWidth() !== image2.getWidth()) {\r\n            throw new Error(\"Images have different sizes!\");\r\n        }\r\n\r\n        const bitsPerComponent = 8,\r\n              L                = (1 << bitsPerComponent) - 1,\r\n              c1               = Math.pow((K1 * L), 2),\r\n              c2               = Math.pow((K2 * L), 2);\r\n\r\n        let numWindows = 0,\r\n            mssim      = 0.0;\r\n\r\n        //calculate ssim for each window\r\n        this._iterate(image1, image2, (lumaValues1 : number[], lumaValues2 : number[], averageLumaValue1 : number, averageLumaValue2 : number) => {\r\n            //calculate variance and covariance\r\n            let sigxy  = 0.0,\r\n                sigsqx = 0.0,\r\n                sigsqy = 0.0;\r\n\r\n            for (let i = 0; i < lumaValues1.length; i++) {\r\n                sigsqx += Math.pow((lumaValues1[ i ] - averageLumaValue1), 2);\r\n                sigsqy += Math.pow((lumaValues2[ i ] - averageLumaValue2), 2);\r\n\r\n                sigxy += (lumaValues1[ i ] - averageLumaValue1) * (lumaValues2[ i ] - averageLumaValue2);\r\n            }\r\n\r\n            const numPixelsInWin = lumaValues1.length - 1;\r\n            sigsqx /= numPixelsInWin;\r\n            sigsqy /= numPixelsInWin;\r\n            sigxy /= numPixelsInWin;\r\n\r\n            //perform ssim calculation on window\r\n            const numerator   = (2 * averageLumaValue1 * averageLumaValue2 + c1) * (2 * sigxy + c2),\r\n                  denominator = (Math.pow(averageLumaValue1, 2) + Math.pow(averageLumaValue2, 2) + c1) * (sigsqx + sigsqy + c2),\r\n                  ssim        = numerator / denominator;\r\n\r\n            mssim += ssim;\r\n            numWindows++;\r\n\r\n        });\r\n        return mssim / numWindows;\r\n    }\r\n\r\n    private _iterate(image1 : PointContainer, image2 : PointContainer, callback : (lumaValues1 : number[], lumaValues2 : number[], averageLumaValue1 : number, averageLumaValue2 : number) => void) {\r\n        const windowSize = 8,\r\n              width      = image1.getWidth(),\r\n              height     = image1.getHeight();\r\n\r\n        for (let y = 0; y < height; y += windowSize) {\r\n            for (let x = 0; x < width; x += windowSize) {\r\n                // avoid out-of-width/height\r\n                const windowWidth  = Math.min(windowSize, width - x),\r\n                      windowHeight = Math.min(windowSize, height - y);\r\n\r\n                const lumaValues1  = this._calculateLumaValuesForWindow(image1, x, y, windowWidth, windowHeight),\r\n                      lumaValues2  = this._calculateLumaValuesForWindow(image2, x, y, windowWidth, windowHeight),\r\n                      averageLuma1 = this._calculateAverageLuma(lumaValues1),\r\n                      averageLuma2 = this._calculateAverageLuma(lumaValues2);\r\n\r\n                callback(lumaValues1, lumaValues2, averageLuma1, averageLuma2);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _calculateLumaValuesForWindow(image : PointContainer, x : number, y : number, width : number, height : number) : number[] {\r\n        const pointArray            = image.getPointArray(),\r\n              lumaValues : number[] = [];\r\n\r\n        let counter = 0;\r\n\r\n        for (let j = y; j < y + height; j++) {\r\n            const offset = j * image.getWidth();\r\n            for (let i = x; i < x + width; i++) {\r\n                const point           = pointArray[ offset + i ];\r\n                lumaValues[ counter ] = point.r * Y.RED + point.g * Y.GREEN + point.b * Y.BLUE;\r\n                counter++;\r\n            }\r\n        }\r\n\r\n        return lumaValues;\r\n    }\r\n\r\n    private _calculateAverageLuma(lumaValues : number[]) : number {\r\n        let sumLuma = 0.0;\r\n        for (let i = 0; i < lumaValues.length; i++) {\r\n            sumLuma += lumaValues[ i ];\r\n        }\r\n\r\n        return sumLuma / lumaValues.length;\r\n    }\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/quality/ssim.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/quality/ssim.ts","/**\r\n * @preserve\r\n * Copyright 2015-2016 Igor Bezkrovnyi\r\n * All rights reserved. (MIT Licensed)\r\n *\r\n * iq.ts - Image Quantization Library\r\n */\r\nimport * as arithmetic from \"./arithmetic\"\r\nimport { HueStatistics } from \"./hueStatistics\"\r\nimport { Palette } from \"./palette\"\r\nimport { Point } from \"./point\"\r\nimport { PointContainer } from \"./pointContainer\"\r\n\r\nexport {\r\n    Point,\r\n    PointContainer,\r\n    Palette,\r\n    HueStatistics,\r\n    arithmetic\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/index.ts\n **/\n\n\n// WEBPACK FOOTER //\n// webpack:///src/utils/index.ts","import {configForm} from \"./configForm\";\nimport {imageFoldersPanel} from \"./imageFileExplorer\";\n\nexport var leftPanel = {\n\ttype : \"line\",\n\trows : [\n\t\tconfigForm,\n\t\t{ type : \"header\", template : \"Image Folder\" },\n\t\timageFoldersPanel\n\t]\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/leftPanel/leftPanel.ts","import {update} from \"../../controller/ui\";\n\nexport var configForm = {\n\tview : \"form\", id : \"myform\", width : 300, elements : [\n\t\t{\n\t\t\tview       : \"richselect\",\n\t\t\tid         : \"option-colors\",\n\t\t\tlabel      : \"Colors\",\n\t\t\tlabelWidth : 175,\n\t\t\tvalue      : \"256\",\n\t\t\toptions    : [\n\t\t\t\t\"2\",\n\t\t\t\t\"4\",\n\t\t\t\t\"16\",\n\t\t\t\t\"64\",\n\t\t\t\t\"128\",\n\t\t\t\t\"256\",\n\t\t\t\t\"512\",\n\t\t\t\t\"1024\",\n\t\t\t\t\"2048\",\n\t\t\t\t\"8192\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tview       : \"richselect\",\n\t\t\tid         : \"option-distance\",\n\t\t\tlabel      : \"Color Distance Equation\",\n\t\t\tlabelWidth : 175,\n\t\t\tvalue      : \"2\",\n\t\t\toptions    : [\n\t\t\t\t{ id : 1, value : \"Euclidean\" },\n\t\t\t\t{ id : 2, value : \"Manhattan\" },\n\t\t\t\t{ id : 3, value : \"CIEDE2000\" },\n\t\t\t\t{ id : 4, value : \"CIE94Textiles\" },\n\t\t\t\t{ id : 5, value : \"CIE94GraphicArts\" },\n\t\t\t\t{ id : 6, value : \"RgbQuant Euclidean (w/o ALPHA)\" },\n\t\t\t\t{ id : 7, value : \"RgbQuant Euclidean (with Alpha)\" },\n\t\t\t\t{ id : 8, value : \"Manhattan (with sRGB coefficients)\" },\n\t\t\t\t{ id : 9, value : \"CMETRIC\" },\n\t\t\t\t{ id : 10, value : \"PNGQUANT\" },\n\t\t\t\t{ id : 11, value : \"Manhattan Nommyde\" }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tview       : \"richselect\",\n\t\t\tid         : \"option-palette\",\n\t\t\tlabel      : \"Quantization Method\",\n\t\t\tlabelWidth : 175,\n\t\t\tvalue      : \"1\",\n\t\t\toptions    : [\n\t\t\t\t{ id : 1, value : \"neuquant (Original, Integer)\" },\n\t\t\t\t{ id : 2, value : \"rgbquant\" },\n\t\t\t\t{ id : 3, value : \"wuquant\" },\n\t\t\t\t{ id : 4, value : \"neuquant (Floating Point)\" }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tview       : \"richselect\",\n\t\t\tid         : \"option-image\",\n\t\t\tlabel      : \"Palette-to-Image Method\",\n\t\t\tlabelWidth : 175,\n\t\t\tvalue      : \"1\",\n\t\t\toptions    : [\n\t\t\t\t{ id : 1, value : \"Nearest (Simple)\" },\n\t\t\t\t{ id : 2, value : \"ErrorDiffusion: Array (Floyd-Steinberg)\" },\n\t\t\t\t{ id : 4, value : \"ErrorDiffusion: Array (Stucki)\" },\n\t\t\t\t{ id : 5, value : \"ErrorDiffusion: Array (Atkinson)\" },\n\t\t\t\t{ id : 6, value : \"ErrorDiffusion: Array (Jarvis)\" },\n\t\t\t\t{ id : 7, value : \"ErrorDiffusion: Array (Burkes)\" },\n\t\t\t\t{ id : 8, value : \"ErrorDiffusion: Array (Sierra)\" },\n\t\t\t\t{ id : 9, value : \"ErrorDiffusion: Array (TwoSierra)\" },\n\t\t\t\t{ id : 10, value : \"ErrorDiffusion: Array (SierraLite)\" },\n\t\t\t\t{ id : 3, value : \"ErrorDiffusion: Array (False Floyd-Steinberg)\" },\n\t\t\t\t{ id : 11, value : \"ErrorDiffusion: Riemersma (Hilbert Curve)\" }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\ttype     : \"line\",\n\t\t\tview     : \"toolbar\",\n\t\t\telements : [ {}, {\n\t\t\t\tview : \"button\", value : \"Update\", width : 90, on : {\n\t\t\t\t\tonItemClick : () => {\n\t\t\t\t\t\tupdate(true)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ]\n\t\t}\n\n\t]\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/leftPanel/configForm.ts","import {imageData} from \"../../data/imageList\";\nimport {update} from \"../../controller/ui\";\n\nexport var imageFoldersPanel = {\n\tid       : \"image\",\n\tview     : \"grouplist\",\n\ttype     : {\n\t\theight : 84\n\t},\n\t//autoheight : true,\n\t//height : 800,\n\ttemplate : function (obj : any) {\n\t\tif (obj.dataUrl) {\n\t\t\treturn \"<img style=\\\"height: 84px\\\" src=\\\"\" + obj.dataUrl + \"\\\"/>\"\n\t\t} else if (obj.folder && obj.file) {\n\t\t\treturn \"<img style=\\\"height: 84px\\\" src=\\\"images/\" + obj.folder + \"/\" + obj.file + \"\\\"/>\"\n\t\t} else {\n\t\t\treturn \"<div style=\\\"line-height: 84px\\\">\" + obj.value + \"</div>\";\n\t\t}\n\t},\n\tselect   : true,\n\t//scroll : false,\n\tdata     : imageData,\n\ton       : {\n\t\t\"onafterselect\" : (id) => {\n\t\t\tupdate(true);\n\t\t}\n\t},\n\tready    : function () {  //select USA\n\t\t//this.select(0);\n\t}\n\n\t/*\n\t select:true,\n\t on:{ \"onafterselect\":country_selected },\n\t type:{ height: 84 },\n\t ready:function(){  //select USA\n\t this.select(6);\n\t }\n\t */\n};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/leftPanel/imageFileExplorer.ts","var imageList = {\n\t\"alpha\"     : [\n\t\t\"children-745674_1920.png\",\n\t\t\"alpha.png\",\n\t\t\"AlphaBall.png\",\n\t\t\"AlphaEdge.png\",\n\t\t\"alphatest.png\",\n\t\t\"cherries-realistic.png\",\n\t\t\"dice-trans.png\",\n\t\t\"pnggrad16rgba.png\",\n\t\t\"tumblr_moyw62RyQo1s5jjtzo1_500.png\",\n\t\t\"Wilber-huge-alpha.png\"\n\t],\n\t\"gradients\" : [\n\t\t\"colorpan2.png\",\n\t\t\"dithgrads.png\",\n\t\t\"grad_default.png\",\n\t\t\"grad.png\",\n\t\t\"grad5.png\",\n\t\t\"grad6.png\",\n\t\t\"grad7.png\",\n\t\t\"grad8.png\",\n\t\t\"pnggrad8rgb.png\",\n\t\t\"sculptmap.png\"\n\t],\n\t\"graphics\"  : [\n\t\t\"baseball.jpg\",\n\t\t\"bebop.jpg\",\n\t\t\"minecraft.png\",\n\t\t\"penguins.png\",\n\t\t\"pool.png\",\n\t\t\"rose.png\",\n\t\t\"smb3.png\",\n\t\t\"super1.png\",\n\t\t\"super2.png\"\n\t],\n\t\"photos1\"   : [\n\t\t\"biking.jpg\",\n\t\t\"bluff.jpg\",\n\t\t\"cloudplane.jpg\",\n\t\t\"compcube.jpg\",\n\t\t\"fishie2.jpg\",\n\t\t\"kitteh1.jpg\",\n\t\t\"medusa.jpg\",\n\t\t\"pheasant.jpg\",\n\t\t\"photoman.jpg\",\n\t\t\"rainbow.jpg\",\n\t\t\"redpanda.jpg\"\n\t],\n\t\"photos2\"   : [\n\t\t\"book-shelf-349934_1920.jpg\",\n\t\t\"children-602977_1920.png\",\n\t\t\"old-books-436498_1920.png\",\n\t\t\"pens-93177_1920.png\",\n\t\t\"baby.jpg\",\n\t\t\"chopsuey.jpg\",\n\t\t\"fish.jpg\",\n\t\t\"kitteh2.jpg\",\n\t\t\"quantfrog.png\",\n\t\t\"treefrog.jpg\",\n\t\t\"quantfrog_small.png\"\n\t]\n};\n\nvar result = [];\n\nfor (var folder in imageList) {\n\tif (imageList.hasOwnProperty(folder)) {\n\t\tvar folderData = {\n\t\t\tid    : \"image-list-\" + folder,\n\t\t\topen  : true,\n\t\t\tvalue : folder,\n\t\t\tdata  : []\n\t\t};\n\n\t\timageList[ folder ].forEach(file => {\n\t\t\tfolderData.data.push({\n\t\t\t\tfile   : file,\n\t\t\t\tfolder : folder,\n\t\t\t\tid     : \"image-list-\" + folder + \"-\" + file\n\t\t\t})\n\t\t});\n\n\t\tresult.push(folderData);\n\t}\n}\n\nexport var imageData = result;\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/imageList.ts","import {quantizedImageClickToCompare} from \"./clickToCompare\";\nimport {quantizedImageOriginalVsQuantized} from \"./originalVsQuantized\";\nimport * as Controller from \"../../controller/ui\";\n\nexport var rightPanel = {\n\tview   : \"tabview\", gravity : 3,\n\ttabbar : {\n\t\toptionWidth : 200, value : \"clickToCompare\", options : [\n\t\t\t{ value : 'Click-to-Compare', id : 'clickToCompare' },\n\t\t\t{ value : 'Original-vs-Quantized', id : 'originalVsQuantized' }\n\t\t],\n\t\ton          : {\n\t\t\tonAfterTabClick : (id) => {\n\t\t\t\tController.update(false);\n\t\t\t}\n\t\t}\n\t},\n\tcells  : [\n\t\tquantizedImageClickToCompare,\n\t\tquantizedImageOriginalVsQuantized,\n\t]\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/rightPanel/rightPanel.ts","export var quantizedImageClickToCompare = {\n\tid   : \"clickToCompare\",\n\trows : [\n\t\t{\n\t\t\tid     : \"imageView1-statistics\",\n\t\t\tview   : \"template\",\n\t\t\theight : 30\n\t\t},\n\n\t\t{\n\t\t\tcols : [\n\t\t\t\t{\n\t\t\t\t\trows : [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype     : \"header\",\n\t\t\t\t\t\t\ttemplate : \"Palette\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid    : \"imageView1-palette\",\n\t\t\t\t\t\t\twidth : 140,\n\t\t\t\t\t\t\tview  : \"template\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\trows : [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype     : \"header\",\n\t\t\t\t\t\t\ttemplate : \"Image\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid   : \"imageView1-image\",\n\t\t\t\t\t\t\tview : \"template\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\n\t]\n\n\t//view : \"template\"\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/rightPanel/clickToCompare.ts","export var quantizedImageOriginalVsQuantized = {\n\tid   : \"originalVsQuantized\",\n\trows : [\n\t\t{\n\t\t\tid     : \"imageView2-statistics\",\n\t\t\tview   : \"template\",\n\t\t\theight : 30\n\t\t},\n\t\t{\n\t\t\tcols : [\n\t\t\t\t{\n\t\t\t\t\trows : [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype     : \"header\",\n\t\t\t\t\t\t\ttemplate : \"Palette\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid    : \"imageView2-palette\",\n\t\t\t\t\t\t\twidth : 140,\n\t\t\t\t\t\t\tview  : \"template\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\trows : [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype     : \"header\",\n\t\t\t\t\t\t\ttemplate : \"Original Image\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid   : \"imageView2-image-original\",\n\t\t\t\t\t\t\tview : \"template\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\trows : [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype     : \"header\",\n\t\t\t\t\t\t\ttemplate : \"Quantized Image\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid   : \"imageView2-image-quantized\",\n\t\t\t\t\t\t\tview : \"template\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/rightPanel/originalVsQuantized.ts"],"sourceRoot":""}